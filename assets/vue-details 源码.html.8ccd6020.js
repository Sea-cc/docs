import{_ as e,r as i,o as t,c as r,d as s,e as n,t as o,b as p,a}from"./app.4ddfd4cd.js";var c="/docs/img/image-20221103220601358.png";const k={},v=a('<h1 id="vue" tabindex="-1"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h1><blockquote><h4 id="\u4EC0\u4E48\u662F\u6E10\u8FDB\u5F0F\u5F0F\u6846\u67B6" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u6E10\u8FDB\u5F0F\u5F0F\u6846\u67B6" aria-hidden="true">#</a> <strong>\u4EC0\u4E48\u662F\u6E10\u8FDB\u5F0F\u5F0F\u6846\u67B6</strong></h4><p><strong>\u8868\u793A\u53EF\u4EE5\u5728\u9879\u76EE\u4E2D\u4E00\u70B9\u70B9\u6765\u5F15\u5165\u548C\u4F7F\u7528 Vue\uFF0C\u800C\u4E0D\u4E00\u5B9A\u9700\u8981\u5168\u90E8\u5F15\u5165\u4F7F\u7528 Vue\uFF0C\u6765\u5F00\u53D1\u6574\u4E2A\u9879\u76EE</strong></p><p><code>&lt;template&gt;</code> \u6807\u7B7E\u5E76\u4E0D\u662F Vue \u7279\u6709\u7684\uFF0C\u662F HTML \u4E00\u4E2A\u6807\u7B7E\uFF0C\u4F46\u662F\u5B83(\u5305\u62EC\u5B83\u7684\u5185\u5BB9)\u4E0D\u4F1A\u88AB\u6D4F\u89C8\u5668\u6E32\u67D3\uFF0C\u800C\u662F\u7528\u6765\u88AB js \u811A\u672C\u8BFB\u53D6\u4F7F\u7528\u7684</p></blockquote><blockquote><h4 id="composition-api" tabindex="-1"><a class="header-anchor" href="#composition-api" aria-hidden="true">#</a> Composition API</h4><p>\u{1F35F} Composition API \u53EF\u4EE5\u5C06\u76F8\u5173\u8054\u7684\u4EE3\u7801\u653E\u5230\u540C\u4E00\u5904\u8FDB\u884C\u5904\u7406\uFF0C\u800C\u4E0D\u9700\u8981\u5728\u591A\u4E2A Options \u4E4B\u95F4\u5BFB\u627E</p><h4 id="hooks-\u51FD\u6570\u589E\u52A0\u4EE3\u7801\u7684\u590D\u7528\u6027" tabindex="-1"><a class="header-anchor" href="#hooks-\u51FD\u6570\u589E\u52A0\u4EE3\u7801\u7684\u590D\u7528\u6027" aria-hidden="true">#</a> Hooks \u51FD\u6570\u589E\u52A0\u4EE3\u7801\u7684\u590D\u7528\u6027</h4><p>\u26F5 \u5728 Vue2.x \u7684\u65F6\u5019\uFF0C\u901A\u5E38\u901A\u8FC7 mixins \u5728\u591A\u4E2A\u7EC4\u4EF6\u4E4B\u95F4\u5171\u4EAB\u903B\u8F91 \u4F46\u662F\u6709\u4E00\u4E2A\u5F88\u5927\u7684\u7F3A\u9677\u5C31\u662F mixins \u4E5F\u662F\u7531\u4E00\u5927\u5806\u7684 Options \u7EC4\u6210\u7684\uFF0C\u5E76\u4E14\u591A\u4E2A mixinss \u4F1A<strong>\u5B58\u5728\u547D\u540D\u51B2\u7A81</strong>\u7684\u95EE\u9898 \u{1F680} \u5728 Vue3.x \u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7 Hook \u51FD\u6570\u6765\u5C06\u4E00\u90E8\u5206\u72EC\u7ACB\u7684\u903B\u8F91\u62BD\u53D6\u51FA\u53BB\uFF0C\u5E76\u4E14\u5B83\u4EEC\u8FD8<strong>\u53EF\u4EE5\u505A\u5230\u662F\u54CD\u5E94\u5F0F\u7684</strong>\uFF0C\u901A\u8FC7\u6309\u9700\u5BFC\u5165\uFF0C\u8FD9\u6837\u4E00\u76EE\u4E86\u7136 Hook \u51FD\u6570\u6765\u81EA\u54EA\u4E2A\u6587\u4EF6</p></blockquote>',3),y=s("strong",null,[s("code",null,"data \u4E2D\u8FD4\u56DE\u7684\u5BF9\u8C61\u4F1A\u88AB Vue \u7684\u54CD\u5E94\u5F0F\u7CFB\u7EDF\u52AB\u6301(\u54CD\u5E94\u5F0F\u6570\u636E)")],-1),h=n("\uFF0C"),d=s("strong",null,"\u4E4B\u540E\u5BF9\u8BE5\u5BF9\u8C61\u7684\u4FEE\u6539\u6216\u8005\u8BBF\u95EE\u90FD\u4F1A\u5728\u52AB\u6301\u4E2D\u88AB\u5904\u7406",-1),u=a(`<blockquote><p><strong>\u5728 vue2 \u4E2D\u63D0\u4F9B .sync \u4FEE\u9970\u7B26\uFF0C\u4F46\u662F\u5728 vue3 \u4E2D\u4E0D\u518D\u652F\u6301.sync\uFF0C\u53D6\u800C\u4EE3\u4E4B\u7684\u662F v-model</strong></p><p>\u5728\u81EA\u5B9A\u4E49\u7EC4\u4EF6\u4E2D\u7684 v-model\uFF0C\u4F1A\u9ED8\u8BA4\u5C55\u5F00\u6210<code>:modelValue</code>\u548C<code>@update:modelValue</code>\u7684\u5F62\u5F0F</p><div class="language-html ext-html line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">dialog</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">v-model</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;dialogVisible&quot;</span><span style="color:var(--shiki-color-text);">&gt;&lt;/</span><span style="color:var(--shiki-token-string-expression);">dialog</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-html ext-html line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-string-expression);">dialog</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	</span><span style="color:var(--shiki-token-function);">:modelValue</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;dialogVisible&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	</span><span style="color:var(--shiki-token-function);">@update:modelValue</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-token-string-expression);">&quot;newValue =&gt; dialogVisible = newValue&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">&gt;&lt;/</span><span style="color:var(--shiki-token-string-expression);">dialog</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5B50\u7EC4\u4EF6\u4E2D<code>emit(&#39;update:modelValue&#39;, newValue)</code>\uFF0C\u7236\u7EC4\u4EF6\u7ED1\u5B9A\u7684\u503C\u5C31\u4F1A\u968F\u4E4B\u4FEE\u6539\u3002</p><p><strong>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cv-model \u5728\u7EC4\u4EF6\u4E0A\u90FD\u662F\u4F7F\u7528 <code>modelValue</code> \u4F5C\u4E3A prop\uFF0C\u5E76\u4EE5 <code>update:modelValue</code> \u4F5C\u4E3A\u5BF9\u5E94\u7684\u4E8B\u4EF6\u3002\u901A\u8FC7\u7ED9 v-model \u6307\u5B9A\u4E00\u4E2A\u53C2\u6570\u6765\u66F4\u6539\u8FD9\u4E9B\u540D\u5B57\uFF1A</strong></p><p><strong>v-model:\u81EA\u5B9A\u4E49 prop = &#39;dialogVisible&#39;</strong></p></blockquote><h2 id="\u8BFB\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u6E90\u7801" aria-hidden="true">#</a> \u8BFB\u6E90\u7801</h2><p><strong><code>\u767B\u4E0A GitHub</code></strong> --- <strong><code>\u641C\u7D22\u4EE3\u7801\u4ED3\u5E93</code></strong> --- <strong><code>\u62C9\u53BB\u4EE3\u7801\u5206\u652F(\u63A8\u8350 master \u7A33\u5B9A\u5206\u652F)</code></strong> --- <strong><code>\u5B89\u88C5\u4F9D\u8D56\u67E5\u770B package.json \u6587\u4EF6</code></strong> --- <strong><code>\u5BF9\u9879\u76EE\u8FDB\u884C\u6253\u5305\u6216\u5176\u5B83\u64CD\u4F5C(\u5982\u679C\u6253\u5305\u6216\u8005\u5176\u5B83\u64CD\u4F5C\u540E\u4EE3\u7801\u67B6\u6784\u4E0D\u6E05\u6670\uFF0C\u53EF\u4EE5\u5C1D\u8BD5\u4F7F\u7528 --sourcemap\uFF0C\u7C7B\u4F3C webpack \u7684\u6E90\u7801\u6620\u5C04\u914D\u7F6E\uFF0C\u6709\u5229\u4E8E\u8C03\u8BD5)</code></strong></p><p><strong>\u6838\u5FC3\u90E8\u5206</strong></p><p><img src="`+c+`" alt="image-20221103220601358" loading="lazy"></p><p><strong><code>D:\\Material\\Vue\u6E90\u7801\u89E3\u6790\\core\\packages\\runtime-dom\\src\\index.ts</code></strong> <strong>\u4ECE\u8FD9\u5F00\u59CB creatApp</strong></p><p><strong><code>D:\\Material\\Vue\u6E90\u7801\u89E3\u6790\\core\\packages\\shared\\src\\index.ts</code></strong> <strong>Vue \u5728\u8FD9\u91CC\u5BFC\u51FA\u5DE5\u5177\u65B9\u6CD5</strong></p><h3 id="options-api" tabindex="-1"><a class="header-anchor" href="#options-api" aria-hidden="true">#</a> options Api</h3><blockquote><h3 id="methods-\u4E2D\u7684\u65B9\u6CD5-this-\u6307\u5411" tabindex="-1"><a class="header-anchor" href="#methods-\u4E2D\u7684\u65B9\u6CD5-this-\u6307\u5411" aria-hidden="true">#</a> Methods \u4E2D\u7684\u65B9\u6CD5 this \u6307\u5411</h3><p>\u4E0D\u80FD\u4F7F\u7528 <strong>\u7BAD\u5934\u51FD\u6570</strong> \u5B9A\u4E49 methods \u4E2D\u7684\u65B9\u6CD5( this \u6307\u5411\u95EE\u9898\uFF0C\u7BAD\u5934\u51FD\u6570\u6CA1\u6709 this\uFF0C\u6240\u4EE5\u5B83\u5728\u5B9A\u4E49\u65F6\u5019\u5C31\u786E\u5B9A this \u7684\u503C )</p><p><strong>\u6E90\u7801\u89E3\u8BFB</strong>\u{1F35F}</p><p><strong>\u5728 Methods \u4E2D\u53D6\u51FA\u51FD\u6570\uFF0C\u901A\u8FC7 bind() \u65B9\u6CD5\uFF0C\u663E\u793A\u7684\u6539\u53D8\u5B83\u7684 this \u6307\u5411 publicThis \u5E76\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u5C06\u8FD4\u56DE\u7684\u51FD\u6570\u8D4B\u503C\u5230\u4E0A\u4E0B\u6587 ctx \u5BF9\u8C61\u4EE5\u6E90\u51FD\u6570\u540C\u540D\u7684 key \u5C5E\u6027 \u4E2D\uFF0C\u3010\u5B9E\u9645\u4E0A\u5728\u4EE3\u7801\u4E2D\u8C03\u7528\u7684\u5E76\u4E0D\u662F\u6E90\u51FD\u6570\uFF0C\u800C\u662F\u901A\u8FC7\u5904\u7406\u540E\u7684 <code>ctx[&#39;\u51FD\u6570\u540D&#39;]</code>\u3011</strong></p><p><strong><code>publicThis</code></strong>\uFF1A<strong>\u7EC4\u4EF6\u5B9E\u4F8B\u7684\u4EE3\u7406 \uFF0C<code>const publicThis = instance.proxy</code></strong></p><p><code>D:\\Material\\Vue\u6E90\u7801\u89E3\u6790\\core\\packages\\runtime-core\\src\\componentOptions.ts:625 </code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (methods) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">key</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">in</span><span style="color:var(--shiki-color-text);"> methods) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">methodHandler</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (methods </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">MethodOptions</span><span style="color:var(--shiki-color-text);">)[key]</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isFunction</span><span style="color:var(--shiki-color-text);">(methodHandler)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-comment);">// \u5728\u5F00\u53D1\u6A21\u5F0F\u4E0B\uFF0C\u6211\u4EEC\u4F7F\u7528\`createRenderContext\`\u51FD\u6570\u6765\u5B9A\u4E49</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-comment);">// \u4EE3\u7406\u76EE\u6807\u7684\u65B9\u6CD5\uFF0C\u90A3\u4E9B\u662F\u53EA\u8BFB\u7684\u4F46\u662F</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-comment);">// \u53EF\u91CD\u65B0\u914D\u7F6E\uFF0C\u6240\u4EE5\u8FD9\u91CC\u9700\u8981\u91CD\u65B0\u5B9A\u4E49</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       </span><span style="color:var(--shiki-token-constant);">Object</span><span style="color:var(--shiki-token-function);">.defineProperty</span><span style="color:var(--shiki-color-text);">(ctx</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> key</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         value</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">methodHandler</span><span style="color:var(--shiki-token-function);">.bind</span><span style="color:var(--shiki-color-text);">(publicThis)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         configurable</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         enumerable</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         writable</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       })</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       ctx[key] </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">methodHandler</span><span style="color:var(--shiki-token-function);">.bind</span><span style="color:var(--shiki-color-text);">(publicThis)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       </span><span style="color:var(--shiki-token-function);">checkDuplicateProperties</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">OptionTypes</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">METHODS</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> key)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       </span><span style="color:var(--shiki-token-string-expression);">\`Method &quot;</span><span style="color:var(--shiki-token-keyword);">\${</span><span style="color:var(--shiki-color-text);">key</span><span style="color:var(--shiki-token-keyword);">}</span><span style="color:var(--shiki-token-string-expression);">&quot; has type &quot;</span><span style="color:var(--shiki-token-keyword);">\${</span><span style="color:var(--shiki-token-keyword);">typeof</span><span style="color:var(--shiki-color-text);"> methodHandler</span><span style="color:var(--shiki-token-keyword);">}</span><span style="color:var(--shiki-token-string-expression);">&quot; in the component definition. \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         </span><span style="color:var(--shiki-token-string-expression);">\`Did you reference the function correctly?\`</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><h3 id="computed-\u7B80\u5199-\u4E0E-\u5B8C\u6574\u5199\u6CD5\u7684\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#computed-\u7B80\u5199-\u4E0E-\u5B8C\u6574\u5199\u6CD5\u7684\u5904\u7406" aria-hidden="true">#</a> computed \u7B80\u5199 \u4E0E \u5B8C\u6574\u5199\u6CD5\u7684\u5904\u7406</h3><p><code>D:\\Material\\Vue\u6E90\u7801\u89E3\u6790\\core\\packages\\runtime-core\\src\\componentOptions.ts:694 </code></p><p><strong>\u{1FAD5} \u540C\u6837\u4E0D\u80FD\u4F7F\u7528\u7BAD\u5934\u51FD\u6570</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (computedOptions) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">key</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">in</span><span style="color:var(--shiki-color-text);"> computedOptions) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">opt</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (computedOptions </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ComputedOptions</span><span style="color:var(--shiki-color-text);">)[key]</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// \u83B7\u53D6 getter \u65B9\u6CD5</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">get</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isFunction</span><span style="color:var(--shiki-color-text);">(opt) </span><span style="color:var(--shiki-token-comment);">// \u5224\u65AD\u662F\u5426\u4E3A\u7B80\u5199 Function \u5199\u6CD5</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">opt</span><span style="color:var(--shiki-token-function);">.bind</span><span style="color:var(--shiki-color-text);">(publicThis</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> publicThis) </span><span style="color:var(--shiki-token-comment);">// \u4FEE\u6539 this \u7ED1\u5B9A proxy(\u540CMethods\u5904\u7406)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isFunction</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">opt</span><span style="color:var(--shiki-color-text);">.get)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">opt</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">get</span><span style="color:var(--shiki-token-function);">.bind</span><span style="color:var(--shiki-color-text);">(publicThis</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> publicThis)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">NOOP</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// NOOP = () =&gt; {}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> get </span><span style="color:var(--shiki-token-keyword);">===</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">NOOP</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">\`Computed property &quot;</span><span style="color:var(--shiki-token-keyword);">\${</span><span style="color:var(--shiki-color-text);">key</span><span style="color:var(--shiki-token-keyword);">}</span><span style="color:var(--shiki-token-string-expression);">&quot; has no getter.\`</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// \u83B7\u53D6 setter \u65B9\u6CD5</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">set</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-function);">isFunction</span><span style="color:var(--shiki-color-text);">(opt) </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isFunction</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">opt</span><span style="color:var(--shiki-color-text);">.set)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">opt</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">set</span><span style="color:var(--shiki-token-function);">.bind</span><span style="color:var(--shiki-color-text);">(publicThis)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> __DEV__</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">                </span><span style="color:var(--shiki-token-string-expression);">\`Write operation failed: computed property &quot;</span><span style="color:var(--shiki-token-keyword);">\${</span><span style="color:var(--shiki-color-text);">key</span><span style="color:var(--shiki-token-keyword);">}</span><span style="color:var(--shiki-token-string-expression);">&quot; is readonly.\`</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">NOOP</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// \uFF1F\uFF1F\uFF1Fcompostion API</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">c</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">computed</span><span style="color:var(--shiki-color-text);">({</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        get</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        set</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      })</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-constant);">Object</span><span style="color:var(--shiki-token-function);">.defineProperty</span><span style="color:var(--shiki-color-text);">(ctx</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> key</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        enumerable</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        configurable</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">c</span><span style="color:var(--shiki-color-text);">.value</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-comment);">// vue3 \u54CD\u5E94\u5F0F\u5199\u6CD5</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">set</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> v </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">c</span><span style="color:var(--shiki-color-text);">.value </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> v)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      })</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// \u68C0\u67E5\u91CD\u590D\u5C5E\u6027</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">checkDuplicateProperties</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">OptionTypes</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">COMPUTED</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> key)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><h3 id="watch-\u76D1\u542C\u5668" tabindex="-1"><a class="header-anchor" href="#watch-\u76D1\u542C\u5668" aria-hidden="true">#</a> watch \u76D1\u542C\u5668</h3><p><strong><code>\u6CE8\u610F\uFF1Awatch \u76D1\u542C\u4E0D\u5230 \u5F15\u7528\u7C7B\u578B \u7684\u65E7\u503C(oldValue)</code></strong></p><p><strong>\u5176\u5B83\u5199\u6CD5(\u5B57\u7B26\u4E32)</strong>\uFF1A<strong><code>\u76D1\u542C\u5C5E\u6027:&#39;methods\u65B9\u6CD5\u540D&#39;</code></strong>;</p><p><strong>\u6570\u7EC4\uFF1A</strong> <strong><code>[&#39;\u5B57\u7B26\u4E32\u5199\u6CD5&#39; , Function\u5199\u6CD5 , Object\u5199\u6CD5]\uFF0C\u9010\u4E00\u88AB\u8C03\u7528</code></strong></p><p><strong>\u5BF9\u8C61\u5C5E\u6027\u7B80\u5199\uFF1A</strong> <strong><code>&#39;\u5BF9\u8C61.\u5C5E\u6027&#39;(){}</code></strong></p></blockquote><blockquote><h3 id="\u4F9D\u8D56\u6CE8\u5165-provide-inject" tabindex="-1"><a class="header-anchor" href="#\u4F9D\u8D56\u6CE8\u5165-provide-inject" aria-hidden="true">#</a> \u4F9D\u8D56\u6CE8\u5165 provide inject</h3><p><strong>\u5982\u679C\u9700\u8981\u8FD4\u56DE data \u4E2D\u7684\u6570\u636E\uFF0C\u9700\u8981\u4F7F\u7528 Function \u5199\u6CD5\uFF0C\u4F46\u662F\u6570\u636E\u4E0D\u4F1A\u662F\u54CD\u5E94\u5F0F\u7684\uFF0C\u89E3\u51B3\u65B9\u6848\uFF1A</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-keyword);">import</span><span style="color:var(--shiki-color-text);"> { computed } </span><span style="color:var(--shiki-token-keyword);">from</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;vue&#39;</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">provide</span><span style="color:var(--shiki-color-text);">(){</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	</span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">		name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-color-text);">.name</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-comment);">// \u4E0D\u662F\u54CD\u5E94\u5F0F</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// \u8F6C\u5316\u54CD\u5E94\u5F0F\u6570\u636E</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-token-function);">computed</span><span style="color:var(--shiki-color-text);">(() </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-color-text);">.name)</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// Vue3 compostion API</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="composition-api-1" tabindex="-1"><a class="header-anchor" href="#composition-api-1" aria-hidden="true">#</a> composition Api</h3><blockquote><h3 id="\u{1FA82}-setup" tabindex="-1"><a class="header-anchor" href="#\u{1FA82}-setup" aria-hidden="true">#</a> \u{1FA82} setup</h3><p><strong>\u5728 setup \u4E2D\u5E94\u5F53\u907F\u514D\u4F7F\u7528 this\uFF0C\u56E0\u4E3A\u5B83\u4E0D\u4F1A\u627E\u5230\u7EC4\u4EF6\u5B9E\u4F8B\u3002<code>setup \u7684\u8C03\u7528\u53D1\u751F\u5728 data property\u3001computed property \u6216 methods \u88AB\u89E3\u6298\u4E4B\u524D\uFF0C\u8C03\u7528 createComponentInstance \u521B\u5EFA\u7EC4\u4EF6\u5B9E\u4F8B\u4E4B\u540E</code>\uFF0C\u6240\u4EE5\u5B83\u4EEC\u65E0\u6CD5\u5728 setup \u4E2D\u83B7\u53D6</strong></p><p><strong>\u5728\u9605\u8BFB\u6E90\u7801\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u4EE3\u7801\u662F\u6309\u7167\u5982\u4E0B\u987A\u5E8F\u6267\u884C\u7684</strong> &gt; <strong>\u{1F35F} \u8C03\u7528 createComponentInstance \u521B\u5EFA\u7EC4\u4EF6\u5B9E\u4F8B</strong> &gt; <strong>\u{1F373} \u8C03\u7528 setupComponent \u521D\u59CB\u5316 component \u5185\u90E8\u7684\u64CD\u4F5C</strong> &gt; <strong>\u{1F343} \u8C03\u7528 setupStatefulComponent \u521D\u59CB\u5316\u6709\u72B6\u6001\u7684\u7EC4\u4EF6</strong> &gt; <strong>\u{1F30F} \u5728 setupStatefulComponent \u53D6\u51FA setup \u51FD\u6570</strong> &gt; <strong>\u{1F6F5} \u901A\u8FC7 callWithErrorHandling \u7684\u51FD\u6570\u6267\u884C setup</strong></p><p>\u5904\u7406\u7EC4\u4EF6\u5728\uFF1A <strong><code>D:\\Material\\Vue\u6E90\u7801\u89E3\u6790\\core\\packages\\runtime-core\\src\\renderer.ts\uFF1A421</code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-comment);">// ...\u5904\u7406\u7EC4\u4EF6\u8282\u70B9</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (shapeFlag </span><span style="color:var(--shiki-token-keyword);">&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ShapeFlags</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">COMPONENT</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-function);">processComponent</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         n1</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         n2</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">         optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">processComponent</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> n1</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> n2</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> container</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">RendererElement</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> anchor</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">RendererNode</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> parentComponent</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ComponentInternalInstance</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> parentSuspense</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">SuspenseBoundary</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> isSVG</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">boolean</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> slotScopeIds</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">string</span><span style="color:var(--shiki-color-text);">[] </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> optimized</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">boolean</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">n2</span><span style="color:var(--shiki-color-text);">.slotScopeIds </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> slotScopeIds</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// n1 == null \u8868\u793A\u8FD9\u662F\u6302\u8F7D\u8282\u70B9</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (n1 </span><span style="color:var(--shiki-token-keyword);">==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">n2</span><span style="color:var(--shiki-color-text);">.shapeFlag </span><span style="color:var(--shiki-token-keyword);">&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ShapeFlags</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">COMPONENT_KEPT_ALIVE</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     ;(parentComponent</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-color-text);">.ctx </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">KeepAliveContext</span><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-function);">.activate</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       n2</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-comment);">// \u8C03\u7528 mountComponent \u6302\u8F7D\u7EC4\u4EF6</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-function);">mountComponent</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       n2</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">       optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// n1 \u4E3A\u975E\u7A7A\u8868\u793A\u8FD9\u662F\u4E00\u4E2A\u66F4\u65B0\uFF0C\u66F4\u65B0\u7EC4\u4EF6</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-function);">updateComponent</span><span style="color:var(--shiki-color-text);">(n1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> n2</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> optimized)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u{1F35F} \u8C03\u7528 createComponentInstance \u521B\u5EFA\u7EC4\u4EF6\u5B9E\u4F8B</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">mountComponent</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">MountComponentFn</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> initialVNode</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// 2.x compat \u53EF\u4EE5\u5728\u5B9E\u9645\u4E4B\u524D\u9884\u5148\u521B\u5EFA\u7EC4\u4EF6\u5B9E\u4F8B</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// \u5B89\u88C5,\u8C03\u7528 createComponentInstance \u521B\u5EFA\u7EC4\u4EF6\u5B9E\u4F8B</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">compatMountInstance</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   __COMPAT__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">initialVNode</span><span style="color:var(--shiki-color-text);">.isCompatRoot </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">initialVNode</span><span style="color:var(--shiki-color-text);">.component</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ComponentInternalInstance</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   compatMountInstance </span><span style="color:var(--shiki-token-keyword);">||</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   (</span><span style="color:var(--shiki-token-constant);">initialVNode</span><span style="color:var(--shiki-color-text);">.component </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">createComponentInstance</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     initialVNode</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     parentSuspense</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   ))</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">type</span><span style="color:var(--shiki-color-text);">.__hmrId) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-function);">registerHMR</span><span style="color:var(--shiki-color-text);">(instance)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-function);">pushWarningContext</span><span style="color:var(--shiki-color-text);">(initialVNode)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-function);">startMeasure</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">\`mount\`</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// inject renderer internals for keepAlive</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isKeepAlive</span><span style="color:var(--shiki-color-text);">(initialVNode)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   ;(</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.ctx </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">KeepAliveContext</span><span style="color:var(--shiki-color-text);">).renderer </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> internals</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// \u89E3\u6790\u8BBE\u7F6E\u4E0A\u4E0B\u6587\u7684\u9053\u5177\u548C\u63D2\u69FD</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// \u4F5C\u7528\u662F\u5BF9\u7EC4\u4EF6\u7684 props \u548C slots \u7B49\u8FDB\u884C\u521D\u59CB\u5316\u5904\u7406(\u5E76\u4E14\u5185\u90E8\u6709\u5BF9 Vue2.x \u7684 options Api \u517C\u5BB9\u5904\u7406)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-color-text);">(__COMPAT__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> compatMountInstance)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-function);">startMeasure</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">\`init\`</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-comment);">// \u{1F373} \u8C03\u7528 setupComponent \u521D\u59CB\u5316 component \u5185\u90E8\u7684\u64CD\u4F5C</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-function);">setupComponent</span><span style="color:var(--shiki-color-text);">(instance)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-function);">endMeasure</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">\`init\`</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// setup() is async. This component relies on async logic to be resolved</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// before proceeding</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__FEATURE_SUSPENSE__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.asyncDep) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   parentSuspense </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">parentSuspense</span><span style="color:var(--shiki-token-function);">.registerDep</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> setupRenderEffect)</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-comment);">// Give it a placeholder if this is not hydration</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-comment);">// TODO handle self-defined fallback</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-constant);">initialVNode</span><span style="color:var(--shiki-color-text);">.el) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">placeholder</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.subTree </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">createVNode</span><span style="color:var(--shiki-color-text);">(Comment))</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">     </span><span style="color:var(--shiki-token-function);">processCommentNode</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> placeholder</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> container</span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> anchor)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-keyword);">return</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setupRenderEffect</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   instance</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   initialVNode</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> )</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-function);">popWarningContext</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">   </span><span style="color:var(--shiki-token-function);">endMeasure</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">\`mount\`</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);"> }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>D:\\Material\\Vue\u6E90\u7801\u89E3\u6790\\core\\packages\\runtime-core\\src\\component.ts\uFF1A596</code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-comment);">// \u{1F373} \u8C03\u7528 setupComponent \u521D\u59CB\u5316 component \u5185\u90E8\u7684\u64CD\u4F5C</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setupComponent</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">instance</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ComponentInternalInstance</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">isSSR </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">isInSSRComponentSetup </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> isSSR</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> { </span><span style="color:var(--shiki-token-constant);">props</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">children</span><span style="color:var(--shiki-color-text);"> } </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.vnode</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u5224\u65AD\u662F\u5426\u662F\u6709\u72B6\u6001\u7EC4\u4EF6</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">isStateful</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isStatefulComponent</span><span style="color:var(--shiki-color-text);">(instance)</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u521D\u59CB\u5316 props \u548C slots</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">initProps</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> props</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> isStateful</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> isSSR)</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">initSlots</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> children)</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u{1F343} \u8C03\u7528 setupStatefulComponent \u521D\u59CB\u5316\u6709\u72B6\u6001\u7684\u7EC4\u4EF6</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">/**</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">   * \u8BBE\u7F6E\u6709\u72B6\u6001</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">   * </span><span style="color:var(--shiki-token-keyword);">@param</span><span style="color:var(--shiki-token-comment);"> </span><span style="color:var(--shiki-token-function);">{object}</span><span style="color:var(--shiki-token-comment);"> \u3010\u5BF9\u8C61\u3011\u7EC4\u4EF6 - \u6709\u72B6\u6001\u7EC4\u4EF6</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">   * </span><span style="color:var(--shiki-token-keyword);">@param</span><span style="color:var(--shiki-token-comment);"> </span><span style="color:var(--shiki-token-function);">{fuction}</span><span style="color:var(--shiki-token-comment);"> \u3010\u51FD\u6570\u3011\u7EC4\u4EF6 - \u65E0\u72B6\u6001\u7EC4\u4EF6</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">  */</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">setupResult</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> isStateful</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setupStatefulComponent</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> isSSR) </span><span style="color:var(--shiki-token-comment);">// ...</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">undefined</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  isInSSRComponentSetup </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> setupResult</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u{1F30F} \u5728setupStatefulComponent \u53D6\u51FA setup \u51FD\u6570</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">setupStatefulComponent</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  instance</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ComponentInternalInstance</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  isSSR</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">boolean</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Component</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.type </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ComponentOptions</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">Component</span><span style="color:var(--shiki-color-text);">.name) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-function);">validateComponentName</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Component</span><span style="color:var(--shiki-color-text);">.name</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">appContext</span><span style="color:var(--shiki-color-text);">.config)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">Component</span><span style="color:var(--shiki-color-text);">.components) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">names</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Object</span><span style="color:var(--shiki-token-function);">.keys</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Component</span><span style="color:var(--shiki-color-text);">.components)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">; i </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">names</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">length</span><span style="color:var(--shiki-color-text);">; i</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">validateComponentName</span><span style="color:var(--shiki-color-text);">(names[i]</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">appContext</span><span style="color:var(--shiki-color-text);">.config)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">Component</span><span style="color:var(--shiki-color-text);">.directives) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">names</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Object</span><span style="color:var(--shiki-token-function);">.keys</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">Component</span><span style="color:var(--shiki-color-text);">.directives)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">; i </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">names</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">length</span><span style="color:var(--shiki-color-text);">; i</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">validateDirectiveName</span><span style="color:var(--shiki-color-text);">(names[i])</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">Component</span><span style="color:var(--shiki-color-text);">.compilerOptions </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isRuntimeOnly</span><span style="color:var(--shiki-color-text);">()) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">\`&quot;compilerOptions&quot; is only supported when using a build of Vue that \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-string-expression);">\`includes the runtime compiler. Since you are using a runtime-only \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-string-expression);">\`build, the options should be passed via your build tool config instead.\`</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// 0. \u521B\u5EFA\u6E32\u67D3\u4EE3\u7406\u5C5E\u6027\u8BBF\u95EE\u7F13\u5B58</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.accessCache </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Object</span><span style="color:var(--shiki-token-function);">.create</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// 1. \u521B\u5EFA\u516C\u5171\u5B9E\u4F8B/\u6E32\u67D3\u4EE3\u7406</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// \u4E5F\u5C06\u5176\u6807\u8BB0\u4E3A\u539F\u59CB\u7684\uFF0C\u56E0\u6B64\u4ECE\u672A\u89C2\u5BDF\u200B\u200B\u5230</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.proxy </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">markRaw</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Proxy</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.ctx</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> PublicInstanceProxyHandlers))</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">exposePropsOnRenderContext</span><span style="color:var(--shiki-color-text);">(instance)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// 2. call setup() \u8C03\u7528 setup()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> { </span><span style="color:var(--shiki-token-constant);">setup</span><span style="color:var(--shiki-color-text);"> } </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> Component</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (setup) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// sutup \u6709\u53C2\u6570 \u521B\u5EFA setup \u4E0A\u4E0B\u6587, \u5E76\u4E14\u5C06 setup \u4E0A\u4E0B\u6587\u6302\u8F7D\u5230\u5B9E\u4F8B\u4E0A setupContext = { attrs, slots, emit }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">setupContext</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.setupContext </span><span style="color:var(--shiki-token-keyword);">=</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-constant);">setup</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">length</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">createSetupContext</span><span style="color:var(--shiki-color-text);">(instance) </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">setCurrentInstance</span><span style="color:var(--shiki-color-text);">(instance)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">pauseTracking</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u{1F6F5} \u901A\u8FC7 callWithErrorHandling \u7684\u51FD\u6570\u6267\u884C setup</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u6267\u884C setup \u51FD\u6570\u5E76\u4E14\u5C06\u8FD4\u56DE\u503C\u8D4B\u503C\u7ED9 setupResult(\u83B7\u53D6\u7ED3\u679C)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u5185\u90E8\u4F1A\u6267\u884C setup \u51FD\u6570\u5E76\u4E14\u5C06instance(prop)\u3001setupContext \u4F5C\u4E3A\u53C2\u6570\u4F20\u5165</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u4E3A\u4EC0\u4E48\u4E0D\u76F4\u63A5\u6267\u884C,\u901A\u8FC7callWithErrorHandling\u5C01\u88C5\u4E00\u4E9B\u6355\u83B7\u9519\u8BEF\u7684\u65B9\u6CD5 try...catch</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">setupResult</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">callWithErrorHandling</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      setup</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      instance</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-constant);">ErrorCodes</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">SETUP_FUNCTION</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      [__DEV__ </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">shallowReadonly</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.props) </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.props</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> setupContext] </span><span style="color:var(--shiki-token-comment);">// \u4F20\u9012 prop setupContext,\u56DE\u8C03setup(...args)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">resetTracking</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">unsetCurrentInstance</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isPromise</span><span style="color:var(--shiki-color-text);">(setupResult)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-constant);">setupResult</span><span style="color:var(--shiki-token-function);">.then</span><span style="color:var(--shiki-color-text);">(unsetCurrentInstance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> unsetCurrentInstance)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (isSSR) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// return the promise so server-renderer can wait on it</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> setupResult</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">.then</span><span style="color:var(--shiki-color-text);">((resolvedResult</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">unknown</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">handleSetupResult</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> resolvedResult</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> isSSR)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          })</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">.catch</span><span style="color:var(--shiki-color-text);">(e </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">handleError</span><span style="color:var(--shiki-color-text);">(e</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ErrorCodes</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">SETUP_FUNCTION</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          })</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__FEATURE_SUSPENSE__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// async setup returned Promise.</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// bail here and wait for re-entry.</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.asyncDep </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> setupResult</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.suspense) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">name</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Component</span><span style="color:var(--shiki-color-text);">.name </span><span style="color:var(--shiki-token-keyword);">??</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;Anonymous&#39;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-string-expression);">\`Component &lt;</span><span style="color:var(--shiki-token-keyword);">\${</span><span style="color:var(--shiki-color-text);">name</span><span style="color:var(--shiki-token-keyword);">}</span><span style="color:var(--shiki-token-string-expression);">&gt;: setup function returned a promise, but no \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-string-expression);">\`&lt;Suspense&gt; boundary was found in the parent component tree. \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-string-expression);">\`A component with async setup() must be nested in a &lt;Suspense&gt; \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-string-expression);">\`in order to be rendered.\`</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-string-expression);">\`setup() returned a Promise, but the version of Vue you are using \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-string-expression);">\`does not support it yet.\`</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-function);">handleSetupResult</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> setupResult</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> isSSR)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">finishComponentSetup</span><span style="color:var(--shiki-color-text);">(instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> isSSR)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// callWithErrorHandling \u51FD\u6570\u5E2E\u52A9\u6267\u884C steup \u51FD\u6570\uFF0C\u6355\u83B7\u9519\u8BEF</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">callWithErrorHandling</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-function);">fn</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Function</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  instance</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ComponentInternalInstance</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  type</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ErrorTypes</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  args</span><span style="color:var(--shiki-token-keyword);">?:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">unknown</span><span style="color:var(--shiki-color-text);">[]</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> res</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">try</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u4E3A\u4EC0\u4E48\u4E0D\u80FD\u5728 setup \u4F7F\u7528 this\uFF1F\u8FD9\u91CC\u6CA1\u6709\u5BF9\u51FD\u6570 setup \u8FDB\u884C this \u7ED1\u5B9A</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    res </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> args </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">fn</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-keyword);">...</span><span style="color:var(--shiki-color-text);">args) </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">fn</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  } </span><span style="color:var(--shiki-token-keyword);">catch</span><span style="color:var(--shiki-color-text);"> (err) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">handleError</span><span style="color:var(--shiki-color-text);">(err</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> type)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> res</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><h4 id="\u5C0F\u4E60\u60EF" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u4E60\u60EF" aria-hidden="true">#</a> \u5C0F\u4E60\u60EF\uFF1A</h4><p>\u5F53\u8C03\u7528\u51FD\u6570\u65F6\uFF0C\u4EC5\u4EC5\u9700\u8981\u83B7\u53D6\u51FD\u6570\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7684\u4F7F\u7528\uFF0C\u4E0D\u9700\u8981\u7B2C\u4E00\u4E2A\u53C2\u6570\u65F6\uFF0C\u901A\u5E38\u4F7F\u7528 <code>_</code>\u8FDB\u884C\u5360\u4F4D</p><p><code>setup ( _ , context )</code></p></blockquote><blockquote><h3 id="\u{1F35F}-reactive-\u54CD\u5E94\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u{1F35F}-reactive-\u54CD\u5E94\u5F0F" aria-hidden="true">#</a> \u{1F35F} reactive \u54CD\u5E94\u5F0F</h3><p><strong>reactive \u5F53\u4F20\u5165\u57FA\u7840\u6570\u636E\u7C7B\u578B\u4F1A\u4EA7\u751F\u63A7\u5236\u53F0\u8B66\u544A\uFF0C\u6B63\u786E\u5E94\u5F53\u4F7F\u7528 \u5BF9\u8C61\u6216\u8005\u6570\u7EC4</strong></p><p><strong>options Api \u7684\u54CD\u5E94\u5F0F\u5904\u7406\u4E5F\u65F6\u901A\u8FC7 composition Api \u8FDB\u884C\u5305\u88F9\u5904\u7406\u7684</strong>\uFF0C<strong><code>reactive({ ...\u5305\u88F9 options Api \u54CD\u5E94\u5F0F\u6570\u636E })</code></strong></p><p><strong><code>\u901A\u8FC7\u4F7F\u7528 reactive \u5904\u7406\u540E\u7684\u8FD4\u56DE\u503C\uFF0C\u5F53\u8BFB\u53D6\u65F6\uFF0C\u4F1A\u505A\u4E00\u4E2A\u6570\u636E\u52AB\u6301(Proxy \u505A\u6570\u636E\u52AB\u6301[getter\u3001setter])</code></strong></p><p><strong><code>\u54CD\u5E94\u5F0F\u6570\u636E\u88AB\u4F7F\u7528\u7684\u65F6\u5019\uFF0C\u4F1A\u8FDB\u884C\u4F9D\u8D56\u7684\u6536\u96C6(\u6A21\u677F\u4E0A\u7684\u6570\u636E\u4F7F\u7528...\u7B49\u7B49)\uFF0C\u5F53\u6570\u636E\u53D1\u751F\u6539\u53D8\u7684\u65F6\u5019\uFF0C\u5BF9\u76F8\u5E94\u6536\u96C6\u7684\u4F9D\u8D56\u8FDB\u884C\u5BF9\u5E94\u7684\u54CD\u5E94\u5F0F\u66F4\u65B0\u64CD\u4F5C</code></strong></p></blockquote>`,16),x=a('<h3 id="\u{1F373}-ref-\u54CD\u5E94\u5F0F-\u5B98\u65B9-\u63A8\u8350\u5C3D\u91CF\u4F7F\u7528-ref-\u800C\u4E0D\u662F-reactive" tabindex="-1"><a class="header-anchor" href="#\u{1F373}-ref-\u54CD\u5E94\u5F0F-\u5B98\u65B9-\u63A8\u8350\u5C3D\u91CF\u4F7F\u7528-ref-\u800C\u4E0D\u662F-reactive" aria-hidden="true">#</a> \u{1F373} ref \u54CD\u5E94\u5F0F(\u5B98\u65B9\uFF1A\u63A8\u8350\u5C3D\u91CF\u4F7F\u7528 ref \u800C\u4E0D\u662F reactive)</h3><p><strong>ref \u4F1A\u8FD4\u56DE\u4E00\u4E2A<code>\u53EF\u53D8\u7684\u54CD\u5E94\u5F0F\u5BF9\u8C61</code>\uFF0C\u8BE5\u5BF9\u8C61<code>\u4F5C\u4E3A\u4E00\u4E2A\u3010\u54CD\u5F0F\u7684\u5F15\u7528\u3011\u7EF4\u62A4\u7740\u5B83\u3010\u5185\u90E8\u7684\u503C\u3011</code>\uFF0C\u8FD9\u5C31\u662F ref \u540D\u79F0\u7684\u6765\u6E90\uFF1B</strong> &gt; <strong>\u5B83\u5185\u90E8\u7684\u503C\u662F\u5728 ref \u7684 value \u5C5E\u6027\u4E2D\u88AB\u7EF4\u62A4\u7684\uFF0C\u771F\u6B63\u7684\u6570\u636E\u662F\u5728 value \u4E2D\u7EF4\u62A4\uFF1B</strong></p><p><strong>\u5728<code>\u6A21\u677F</code>\u4E2D\u4F7F\u7528 ref \u6570\u636E\uFF0C\u7406\u8BBA\u6765\u8BF4\u5E94\u5F53\u662F\u4E00\u4E2A \u53EF\u53D8\u7684 ref \u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0CVue \u4E3A\u4E86\u5F00\u53D1\u65B9\u4FBF\uFF0C\u5728\u6A21\u677F\u4F7F\u7528 ref \u5BF9\u8C61\u65F6\uFF0C\u4F1A\u81EA\u52A8\u8FDB\u884C\u89E3\u5305\uFF0C\u4E0D\u9700\u8981 <code>ref.value</code></strong>\uFF1B</p>',3),m=n("\u6CE8\u610F\uFF1A\u5728\u903B\u8F91\u4EE3\u7801\u4E2D\u5E76\u6CA1\u6709\u81EA\u52A8\u8FDB\u884C\u89E3\u5305\uFF0C\u53EF\u4EE5\u4F7F\u7528 Vue \u7684\u65B0\u5B9E\u9A8C\u6027\u529F\u80FD\u5BF9\u903B\u8F91\u4EE3\u7801\u8FDB\u884C\u89E3\u5305 -> "),b={href:"https://github.com/vuejs/core/tree/main/packages/reactivity-transform",target:"_blank",rel:"noopener noreferrer"},w=n("Vue \u7684\u54CD\u5E94\u6027\u8BED\u6CD5\u7CD6"),f=s("h4",{id:"ref-\u89E3\u5305",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ref-\u89E3\u5305","aria-hidden":"true"},"#"),n(" ref \u89E3\u5305\uFF1A")],-1),g=s("p",null,[s("strong",null,[n("ref \u7684\u89E3\u5305\u64CD\u4F5C\u662F\u4E00\u4E2A"),s("code",null,"\u6D45\u5C42\u7684\u89E3\u5305"),n("\uFF0C\u5F53\u5728\u6A21\u677F\u4E2D\u76F4\u63A5\u8BFB\u53D6 ref \u5BF9\u8C61\u65F6\u624D\u4F1A\u8FDB\u884C\u89E3\u5305\u64CD\u4F5C\uFF0C\u4F46\u662F"),s("code",null,"\u901A\u8FC7\u5C06 ref \u5BF9\u8C61\u76F4\u63A5\u8D4B\u503C\u7ED9\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\u5C5E\u6027\u65F6\uFF0C\u5728\u6A21\u677F\u4E2D\u901A\u8FC7 \u5BF9\u8C61.ref \u5BF9\u8C61 \u65F6\u662F\u4E0D\u4F1A\u8FDB\u884C\u89E3\u5305\u7684")]),n("\uFF0C\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u901A\u8FC7\u5305\u88F9\u7684 ref \u5BF9\u8C61\u540E\u5728\u6A21\u677F\u4E2D\u4E0D\u80FD\u8FDB\u884C\u89E3\u5305\u4E86")],-1),V=s("p",null,[s("strong",null,"\u4E0D\u80FD\u89E3\u5305\u60C5\u51B5\u3010\u666E\u901A\u5BF9\u8C61\u5305\u88F9\u3011\uFF0C\u80FD\u89E3\u5305\u60C5\u51B5\u3010reactive \u5BF9\u8C61\u5305\u88F9\u3011")],-1),_=a(`<blockquote><h3 id="\u{1F343}-readonly-\u53EA\u8BFB" tabindex="-1"><a class="header-anchor" href="#\u{1F343}-readonly-\u53EA\u8BFB" aria-hidden="true">#</a> \u{1F343} readonly \u53EA\u8BFB</h3><p><strong>readonly \u4F1A<code>\u8FD4\u56DE\u539F\u751F\u5BF9\u8C61\u7684\u53EA\u8BFB\u4EE3\u7406</code>\uFF08\u4E5F\u5C31\u662F\u5B83\u4F9D\u7136\u662F\u4E00\u4E2A Proxy \uFF0C\u8FD9\u4E2A Proxy \u7684 <code>set \u65B9\u6CD5\u88AB\u52AB\u6301</code>\uFF0C\u5E76\u4E14\u4E0D\u80FD\u5BF9\u5176\u8FDB\u884C\u4FEE\u6539)\u3010\u5728 setter \u65B9\u6CD5\u91CC\u5BF9\u6570\u636E\u4FEE\u6539\u8FDB\u884C\u9650\u5236\u3011</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-comment);">// \u6E90\u5BF9\u8C61(\u666E\u901A\u5BF9\u8C61)</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">info</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">};</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u5904\u7406\u540E\u8FD4\u56DE\u7684\u5BF9\u8C61</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">info_</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">readonly</span><span style="color:var(--shiki-color-text);">(info);</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u6CE8\u610F\uFF1A\u6E90\u5BF9\u8C61\u53EF\u4EE5\u88AB\u4FEE\u6539\uFF0C\u4FEE\u6539\u6E90\u5BF9\u8C61\u6570\u636E\u4E0D\u4F1A\u66F4\u65B0\u{1F343}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">reactive;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">info_</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">readonly</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	info </span><span style="color:var(--shiki-token-comment);">/* reactive \u5904\u7406\u540E\u7684\u5BF9\u8C61\u5728\u8FDB\u884C readonly\uFF0C\u4E0D\u53EF\u4EE5\u88AB\u4FEE\u6539 */</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u6CE8\u610F\uFF1Areactive \u6E90\u5BF9\u8C61\u53EF\u4EE5\u88AB\u4FEE\u6539\uFF0C\u88AB\u4FEE\u6539\uFF0Creadonly \u5BF9\u8C61\u6570\u636E\u4F1A\u66F4\u65B0(\u56E0\u4E3A\u662F\u54CD\u5E94\u5F0F\u7684)\u{1F343}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">ref;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">info_</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">readonly</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	info </span><span style="color:var(--shiki-token-comment);">/* ref \u5904\u7406\u540E\u7684\u5BF9\u8C61\u5728\u8FDB\u884C readonly\uFF0C\u4E0D\u53EF\u4EE5\u88AB\u4FEE\u6539 */</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">);</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u6CE8\u610F\uFF1Aref \u6E90\u5BF9\u8C61\u53EF\u4EE5\u88AB\u4FEE\u6539\uFF0C\u88AB\u4FEE\u6539\uFF0Creadonly \u5BF9\u8C61\u6570\u636E\u4F1A\u66F4\u65B0(\u56E0\u4E3A\u662F\u54CD\u5E94\u5F0F\u7684)\u{1F343}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><h3 id="\u{1F680}-reactive-\u5224\u65AD-api" tabindex="-1"><a class="header-anchor" href="#\u{1F680}-reactive-\u5224\u65AD-api" aria-hidden="true">#</a> \u{1F680} Reactive \u5224\u65AD Api</h3><p><strong><code>isProxy</code>\uFF1A\u68C0\u67E5\u5BF9\u8C61\u662F\u5426\u7531 reactive \u6216\u8005 readonly \u521B\u5EFA\u7684 Proxy \u4EE3\u7406</strong></p><p><strong><code>isReactive</code>\uFF1A\u68C0\u67E5\u5BF9\u8C61\u662F\u5426\u7531 reactive \u521B\u5EFA\u7684\u54CD\u5E94\u5F0F\u4EE3\u7406\u3010\u6CE8\u610F\uFF1A\u5982\u679C\u8BE5\u4EE3\u7406\u662F\u7531 readonly \u521B\u5EFA\u7684\uFF0C\u4F46\u662F\u5305\u88F9\u7684\u662F reactive \u521B\u5EFA\u7684\u53E6\u5916\u4E00\u4E2A\u4EE3\u7406\uFF0C\u540C\u6837\u8FD4\u56DE true\u3011</strong></p><p><strong><code>isReadonly </code>\uFF1A\u68C0\u67E5\u5BF9\u8C61\u662F\u5426\u7531 readonly \u521B\u5EFA\u7684 Proxy \u53EA\u8BFB\u4EE3\u7406</strong></p><p><strong><code>toRaw</code>\uFF1A\u8FD4\u56DE reactive or readonly \u4EE3\u7406\u7684\u539F\u59CB\u5BF9\u8C61</strong></p><p><strong><code>shallowReactive</code>\uFF1A\u521B\u5EFA\u6D45\u5C42\u6B21\u7684 Proxy \u4EE3\u7406\u3010\u53EA\u5BF9\u7B2C\u4E00\u5C42 property \u5C5E\u6027\u8FDB\u884C\u4EE3\u7406\uFF0C\u4E0D\u6267\u884C\u6DF1\u5C42\u6B21\u7684\u5D4C\u5957\u5BF9\u8C61\u4EE3\u7406\uFF0C\u6DF1\u5C42\u6B21\u7684\u5BF9\u8C61\u8FD8\u662F\u539F\u59CB\u7684\u5BF9\u8C61\u3011</strong></p><p><strong><code>shallowReadonly</code>\uFF1A\u4F5C\u7528\u540C\u4E0A</strong></p></blockquote><blockquote><h3 id="\u{1F6F5}-torefs-api" tabindex="-1"><a class="header-anchor" href="#\u{1F6F5}-torefs-api" aria-hidden="true">#</a> \u{1F6F5} toRefs Api</h3><p><strong>\u5BF9 reactive <code>\u6240\u6709\u5C5E\u6027\u8FDB\u884C\u8F6C\u5316 ref \u5BF9\u8C61</code>\uFF0C\u53C2\u6570\u5FC5\u987B\u662F\u54CD\u5E94\u5F0F\u5BF9\u8C61</strong></p><p><strong>\u901A\u8FC7 refs \u89E3\u6784\u8FD4\u56DE name ref \u5BF9\u8C61\uFF0C<code>\u5728 reactive \u7684\u5C5E\u6027\u4E0E ref.value \u5C5E\u6027\u5EFA\u7ACB\u94FE\u63A5\u{1FA82}</code>\uFF0C\u4EFB\u4F55\u4E00\u65B9\u4FEE\u6539\uFF0C\u90FD\u4F1A\u5F15\u8D77\u53E6\u5916\u4E00\u65B9\u53D8\u5316</strong></p><p><strong>\u5BF9 reactive \u8FDB\u884C\u5BF9\u8C61\u89E3\u6784\u4E3A\u4EC0\u4E48\u4F1A\u4E22\u5931\u54CD\u5E94\u5F0F\uFF1F</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> { </span><span style="color:var(--shiki-token-constant);">name</span><span style="color:var(--shiki-color-text);"> } </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">reactive</span><span style="color:var(--shiki-color-text);">({ name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE&#39;</span><span style="color:var(--shiki-color-text);"> });</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u76F8\u5F53\u4E8E</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> name </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE&#39;</span><span style="color:var(--shiki-color-text);">; </span><span style="color:var(--shiki-token-comment);">// \u76F4\u63A5\u8D4B\u503C\u6570\u636E(\u57FA\u7840\u6570\u636E\u{1F6F0}\uFE0F)\uFF0C\u4E22\u5931\u54CD\u5E94\u5F0F</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><h3 id="\u{1F3DC}\uFE0F-toref-api" tabindex="-1"><a class="header-anchor" href="#\u{1F3DC}\uFE0F-toref-api" aria-hidden="true">#</a> \u{1F3DC}\uFE0F toRef Api</h3><p><strong>\u5BF9\u4E00\u4E2A\u5C5E\u6027\u8FDB\u884C ref \u5BF9\u8C61\u8F6C\u5316\uFF0C<code>\u533A\u522B\u4E8E toRefs \u51CF\u5C11\u6027\u80FD\u5F00\u9500\uFF0C\u6CA1\u6709\u89E3\u6784\u8D4B\u503C\uFF0C\u56E0\u4E3A\u53EA\u8FD4\u56DE\u4E00\u4E2A\u503C</code>\uFF0C\u53C2\u6570\u5FC5\u987B\u662F\u54CD\u5E94\u5F0F\u5BF9\u8C61</strong></p></blockquote><blockquote><h3 id="\u{1F3D9}\uFE0F-unref-api" tabindex="-1"><a class="header-anchor" href="#\u{1F3D9}\uFE0F-unref-api" aria-hidden="true">#</a> \u{1F3D9}\uFE0F unref Api</h3><p><strong>\u83B7\u53D6\u4E00\u4E2A ref \u5BF9\u8C61\u5F15\u7528\u4E2D\u7684 value \u503C\u3010\u89E3\u5305\u3011\uFF0C\u4E00\u4E2A\u8BED\u6CD5\u7CD6</strong></p><p><strong><code>val = isRef(val)? val.value : value</code></strong></p></blockquote><blockquote><h3 id="\u{1F389}-isref-api" tabindex="-1"><a class="header-anchor" href="#\u{1F389}-isref-api" aria-hidden="true">#</a> \u{1F389} isRef Api</h3><p><strong>\u540C\u4E0A isReactive</strong></p></blockquote><blockquote><h3 id="\u{1FA85}-shallowref-api" tabindex="-1"><a class="header-anchor" href="#\u{1FA85}-shallowref-api" aria-hidden="true">#</a> \u{1FA85} shallowRef Api</h3><p><strong>\u6D45\u5C42\u7684 ref \u5BF9\u8C61</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ref</span><span style="color:var(--shiki-color-text);">({ name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE&#39;</span><span style="color:var(--shiki-color-text);"> });</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u4FEE\u6539 val\uFF0C\u6DF1\u5C42\u6B21\u7684\u4FEE\u6539(\u76F4\u63A5\u901A\u8FC7 .name \u4FEE\u6539)\uFF0C\u8FD8\u662F\u54CD\u5E94\u5F0F</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">value</span><span style="color:var(--shiki-color-text);">.name </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE3&#39;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u6D45\u5C42</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">shallowRef</span><span style="color:var(--shiki-color-text);">({ name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE&#39;</span><span style="color:var(--shiki-color-text);"> });</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u4FEE\u6539 val\uFF0C\u6DF1\u5C42\u6B21\u7684\u4FEE\u6539(\u76F4\u63A5\u901A\u8FC7 .name \u4FEE\u6539)\uFF0CshallowRef \u540E\u4E0D\u662F\u54CD\u5E94\u5F0F</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">value</span><span style="color:var(--shiki-color-text);">.name </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE3&#39;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u53EA\u5BF9 val.value \u7684\u4FEE\u6539\u4EA7\u751F\u54CD\u5E94\u5F0F</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);">.value </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> { name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE3&#39;</span><span style="color:var(--shiki-color-text);"> };</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><h3 id="\u{1F9F8}-triggerref-api" tabindex="-1"><a class="header-anchor" href="#\u{1F9F8}-triggerref-api" aria-hidden="true">#</a> \u{1F9F8} triggerRef Api</h3><p><strong>\u89E3\u51B3 shallowRef \u5BF9\u4E8E\u6DF1\u5C42\u6B21\u7684\u4FEE\u6539\u540E\uFF0C\u4E0D\u4F1A\u66F4\u65B0\u5BF9\u5E94\u7684\u5C5E\u6027\u3010\u4E0D\u662F\u54CD\u5E94\u5F0F\u3011</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ref</span><span style="color:var(--shiki-color-text);">({ name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE&#39;</span><span style="color:var(--shiki-color-text);"> });</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u4FEE\u6539 val\uFF0C\u6DF1\u5C42\u6B21\u7684\u4FEE\u6539(\u76F4\u63A5\u901A\u8FC7 .name \u4FEE\u6539)\uFF0C\u8FD8\u662F\u54CD\u5E94\u5F0F</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">value</span><span style="color:var(--shiki-color-text);">.name </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE3&#39;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u6D45\u5C42</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">shallowRef</span><span style="color:var(--shiki-color-text);">({ name</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE&#39;</span><span style="color:var(--shiki-color-text);"> });</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u4FEE\u6539 val\uFF0C\u6DF1\u5C42\u6B21\u7684\u4FEE\u6539(\u76F4\u63A5\u901A\u8FC7 .name \u4FEE\u6539)\uFF0CshallowRef \u540E\u4E0D\u662F\u54CD\u5E94\u5F0F</span></span>
<span class="line"><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">value</span><span style="color:var(--shiki-color-text);">.name </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;VUE3&#39;</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u8C03\u7528 triggerRef \u89E6\u53D1\u54CD\u5E94\u5F0F\u66F4\u65B0(\u624B\u52A8\u89E6\u53D1\u66F4\u65B0)</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">triggerRef</span><span style="color:var(--shiki-color-text);">(val);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5176\u5B83-api" tabindex="-1"><a class="header-anchor" href="#\u5176\u5B83-api" aria-hidden="true">#</a> \u5176\u5B83 Api</h3><h4 id="\u{1F3BF}-customref-\u521B\u5EFA\u81EA\u5B9A\u4E49-ref" tabindex="-1"><a class="header-anchor" href="#\u{1F3BF}-customref-\u521B\u5EFA\u81EA\u5B9A\u4E49-ref" aria-hidden="true">#</a> \u{1F3BF} customRef \u521B\u5EFA\u81EA\u5B9A\u4E49 ref</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ref</span><span style="color:var(--shiki-color-text);">(value){</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u63A5\u53D7\u4E24\u4E2A\u53C2\u6570 track(\u6536\u96C6\u4F9D\u8D56\u89E6\u53D1\u66F4\u65B0)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	</span><span style="color:var(--shiki-token-function);">customRef</span><span style="color:var(--shiki-color-text);">((track</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);">trigger)</span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">		</span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">			</span><span style="color:var(--shiki-token-function);">get</span><span style="color:var(--shiki-color-text);">(){</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">				</span><span style="color:var(--shiki-token-function);">track</span><span style="color:var(--shiki-color-text);">();</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">				retrun value</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">			}</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">			</span><span style="color:var(--shiki-token-function);">set</span><span style="color:var(--shiki-color-text);">(newValue){</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">				value</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);">newValue;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">				</span><span style="color:var(--shiki-token-function);">track</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">			}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">		}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	})</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><h3 id="\u{1F3A8}-computed-api" tabindex="-1"><a class="header-anchor" href="#\u{1F3A8}-computed-api" aria-hidden="true">#</a> \u{1F3A8} computed Api</h3><p><strong>computed \u8FD4\u56DE\u4E00\u4E2A ref \u5BF9\u8C61</strong></p></blockquote><blockquote><h3 id="\u{1F389}-watcheffect-api" tabindex="-1"><a class="header-anchor" href="#\u{1F389}-watcheffect-api" aria-hidden="true">#</a> \u{1F389} watchEffect Api</h3><p><strong><code>watchEffect</code>\uFF1A\u81EA\u52A8\u6536\u96C6\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u4F9D\u8D56\uFF0C\u9ED8\u8BA4\u5F00\u542F\u81EA\u52A8\u6267\u884C\u4E00\u6B21</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ref</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;0&#39;</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">watchEffect</span><span style="color:var(--shiki-color-text);">(()</span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	</span><span style="color:var(--shiki-token-constant);">console</span><span style="color:var(--shiki-token-function);">.log</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;\u6267\u884C&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-constant);">val</span><span style="color:var(--shiki-color-text);">.value)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-comment);">/* \u63A5\u53D7\u7B2C\u4E09\u4E2A\u53C2\u6570 option */</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u9700\u8981\u4F7F\u7528\u5230\u83B7\u53D6 dom \u6570\u636E\u65F6\u5019 \u2018post\u2019\uFF0C\u603B\u4E4B\u90FD\u4F1A\u9ED8\u8BA4\u6267\u884C\u4E00\u6B21\uFF0C\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    flush</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-token-string-expression);">&#39;pre&#39;</span><span style="color:var(--shiki-color-text);">(\u9ED8\u8BA4\u503C\uFF0C\u9ED8\u8BA4\u4E00\u5F00\u59CB\u6267\u884C\u4E00\u6B21)</span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-token-string-expression);">&#39;post&#39;</span><span style="color:var(--shiki-color-text);">(dom \u6302\u8F7Dor\u66F4\u65B0\u5B8C\u6267\u884C\u4E00\u6B21)</span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-token-string-expression);">&#39;sync&#39;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u9ED8\u8BA4\u81EA\u52A8\u6267\u884C\u4E00\u6B21\uFF0C<code>\u5E76\u5728\u6267\u884C\u540E\u6536\u96C6\u54CD\u5E94\u5F0F\u4F9D\u8D56</code>\uFF0C\u5F53\u4F9D\u8D56\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u91CD\u65B0\u6267\u884C</strong></p><p><strong><code>\u505C\u6B62 watchEffect \u76D1\u542C</code>\uFF0CwatchEffect \u4F1A\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u5F53\u6267\u884C\u8FD4\u56DE\u7684\u51FD\u6570\u65F6\uFF0C\u5C31\u4F1A\u505C\u6B62 watchEffect \u7684\u76D1\u542C</strong></p><p><strong>\u6E05\u9664\u526F\u4F5C\u7528</strong></p><p>\u5728\u5F00\u53D1\u4E2D\u9700\u8981\u5728\u76D1\u542C\u51FD\u6570\u4E2D\u6267\u884C\u7F51\u7EDC\u8BF7\u6C42\uFF0C\u4F46\u662F\u5728\u7F51\u7EDC\u8BF7\u6C42\u8FD8\u6CA1\u6709\u8FBE\u5230\u7684\u65F6\u5019\uFF0C\u6216\u8005\u76D1\u542C\u5668\u76D1\u542C\u51FD\u6570\u88AB\u518D\u6B21\u6267\u884C\u3002\u90A3\u4E48\u4E0A\u4E00\u6B21\u7684\u7F51\u7EDC\u8BF7\u6C42\u5E94\u8BE5\u88AB\u53D6\u6D88\u6389\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5C31\u53EF\u4EE5\u6E05\u9664\u4E0A\u4E00\u6B21\u7684\u526F\u4F5C\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-comment);">// watchEffect \u63A5\u53D7\u4E00\u4E2A\u53C2\u6570\u56DE\u8C03\u51FD\u6570\uFF0Cfn \u91CC\u9762\u518D\u4F20\u5165\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u7528\u4E8E\u53D6\u6D88\u64CD\u4F5C</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">watchEffect</span><span style="color:var(--shiki-color-text);">((fn) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	</span><span style="color:var(--shiki-token-comment);">// \u5F53\u526F\u4F5C\u7528\u5373\u5C06\u91CD\u65B0\u6267\u884C\u6216\u8005\u76D1\u542C\u5668\u88AB\u505C\u6B62\u65F6\u4F1A\u6267\u884C\u8BE5\u51FD\u6570\u4F20\u5165\u7684\u56DE\u8C03\u51FD\u6570</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	</span><span style="color:var(--shiki-token-function);">fn</span><span style="color:var(--shiki-color-text);">(() </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">		</span><span style="color:var(--shiki-token-comment);">// ...\u53D6\u6D88\u64CD\u4F5C</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	});</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u{1F3A1}-watch-api" tabindex="-1"><a class="header-anchor" href="#\u{1F3A1}-watch-api" aria-hidden="true">#</a> \u{1F3A1} watch Api</h3><p><strong><code>watch</code>\uFF1A\u624B\u52A8\u6307\u5B9A\u76D1\u542C\u7684\u6570\u636E\u6E90</strong></p><p><strong>\u57FA\u672C\u540C options Api</strong></p><p><strong>\u63A5\u53D7\u63A5\u53D7\u56DB\u79CD\u7C7B\u578B\u7684\u76EE\u6807\u6E90\uFF1Agetter \u51FD\u6570\u5E76\u8FD4\u56DE\u4E00\u4E2A\u54CD\u5E94\u5F0F\u6570\u636E\u3001ref \u5BF9\u8C61</strong>\u3001...</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-color-text);">\u6CE8\u610F\uFF1Avue \u5BF9 reactive \u7C7B\u578B\u7684\u4F20\u53C2\u65F6\uFF0CnewValue \u4E0E oldValue \u662F\u4E00\u4E2A Porxy \u5BF9\u8C61\uFF0Cref \u5176\u5B83\u7C7B\u578B\u4E3A\u539F\u751F\u7684\u6570\u636E\u{1F3C0}\u{1F3C0}\u{1F3C0}</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u89E3\u51B3 reactive \u7C7B\u578B\u7684\u4F20\u53C2\u65F6\uFF0CnewValue \u4E0E oldValue \u662F\u4E00\u4E2A Porxy \u5BF9\u8C61</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">watch</span><span style="color:var(--shiki-color-text);">(()</span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">...</span><span style="color:var(--shiki-color-text);">reactive</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);">(newValue</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);">oldValue)</span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-comment);">// \u6267\u884C,\u5BF9\u53C2\u6570\u8FDB\u884C\u6821\u9A8C</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">watch</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-function);">T</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">any</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Immediate</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">extends</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Readonly</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-constant);">boolean</span><span style="color:var(--shiki-color-text);">&gt; </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-color-text);">&gt;(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  source</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">T</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WatchSource</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-function);">T</span><span style="color:var(--shiki-color-text);">&gt;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  cb</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">any</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  options</span><span style="color:var(--shiki-token-keyword);">?:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WatchOptions</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-function);">Immediate</span><span style="color:var(--shiki-color-text);">&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WatchStopHandle</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-token-function);">isFunction</span><span style="color:var(--shiki-color-text);">(cb)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">\`\\\`watch(fn, options?)\\\` signature has been moved to a separate API. \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">\`Use \\\`watchEffect(fn, options?)\\\` instead. \\\`watch\\\` now only \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">\`supports \\\`watch(source, cb, options?) signature.\`</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// ...\u6267\u884C</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">doWatch</span><span style="color:var(--shiki-color-text);">(source </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">any</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> cb</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> options)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">doWatch</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  source</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WatchSource</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WatchSource</span><span style="color:var(--shiki-color-text);">[] </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WatchEffect</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">object</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  cb</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WatchCallback</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  { immediate</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> deep</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> flush</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> onTrack</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> onTrigger }</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WatchOptions</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">EMPTY_OBJ</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">)</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">WatchStopHandle</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">!</span><span style="color:var(--shiki-color-text);">cb) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (immediate </span><span style="color:var(--shiki-token-keyword);">!==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">undefined</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">\`watch() &quot;immediate&quot; option is only respected when using the \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-string-expression);">\`watch(source, callback, options?) signature.\`</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (deep </span><span style="color:var(--shiki-token-keyword);">!==</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">undefined</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">\`watch() &quot;deep&quot; option is only respected when using the \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-string-expression);">\`watch(source, callback, options?) signature.\`</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">warnInvalidSource</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (s</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">unknown</span><span style="color:var(--shiki-color-text);">) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">\`Invalid watch source: \`</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      s</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-string-expression);">\`A watch source can only be a getter/effect function, a ref, \`</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">+</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">\`a reactive object, or an array of these types.\`</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> currentInstance</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// \u76D1\u542C\u7684\u6570\u636E\u6E90\u4F1A\u8D4B\u503C getter \u51FD\u6570</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getter</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">any</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> forceTrigger </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> isMultiSource </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// \u63A5\u53D7\u56DB\u79CD\u7C7B\u578B</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-comment);">// \u5224\u65AD\u662F\u5426ref\u5BF9\u8C61</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isRef</span><span style="color:var(--shiki-color-text);">(source)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">getter</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">source</span><span style="color:var(--shiki-color-text);">.value</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    forceTrigger </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isShallow</span><span style="color:var(--shiki-color-text);">(source)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isReactive</span><span style="color:var(--shiki-color-text);">(source)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">getter</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> source</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u5224\u65ADreactive\u9ED8\u8BA4\u5F00\u542Fdeep</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    deep </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isArray</span><span style="color:var(--shiki-color-text);">(source)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u5224\u65AD\u5F00\u542F\u591A\u76EE\u6807\u6E90\u76D1\u542C</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    isMultiSource </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    forceTrigger </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">source</span><span style="color:var(--shiki-token-function);">.some</span><span style="color:var(--shiki-color-text);">(s </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isReactive</span><span style="color:var(--shiki-color-text);">(s) </span><span style="color:var(--shiki-token-keyword);">||</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">isShallow</span><span style="color:var(--shiki-color-text);">(s))</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">getter</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-constant);">source</span><span style="color:var(--shiki-token-function);">.map</span><span style="color:var(--shiki-color-text);">(s </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isRef</span><span style="color:var(--shiki-color-text);">(s)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">s</span><span style="color:var(--shiki-color-text);">.value</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isReactive</span><span style="color:var(--shiki-color-text);">(s)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">traverse</span><span style="color:var(--shiki-color-text);">(s)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isFunction</span><span style="color:var(--shiki-color-text);">(s)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">callWithErrorHandling</span><span style="color:var(--shiki-color-text);">(s</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ErrorCodes</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">WATCH_GETTER</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          __DEV__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">warnInvalidSource</span><span style="color:var(--shiki-color-text);">(s)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      })</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isFunction</span><span style="color:var(--shiki-color-text);">(source)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (cb) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// getter with cb</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-function);">getter</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">callWithErrorHandling</span><span style="color:var(--shiki-color-text);">(source</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> instance</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ErrorCodes</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">WATCH_GETTER</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// no cb -&gt; simple effect</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-function);">getter</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> () </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (instance </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">instance</span><span style="color:var(--shiki-color-text);">.isUnmounted) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">return</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (cleanup) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">cleanup</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">callWithAsyncErrorHandling</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          source</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          instance</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-constant);">ErrorCodes</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">WATCH_CALLBACK</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          [onCleanup]</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    getter </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">NOOP</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    __DEV__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">warnInvalidSource</span><span style="color:var(--shiki-color-text);">(source)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><h3 id="\u{1F389}-\u751F\u547D\u5468\u671F" tabindex="-1"><a class="header-anchor" href="#\u{1F389}-\u751F\u547D\u5468\u671F" aria-hidden="true">#</a> \u{1F389} \u751F\u547D\u5468\u671F</h3><p><strong>composition Api \u751F\u547D\u5468\u671F\u51FD\u6570\u4E3A<code>\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u53EF\u4EE5\u6CE8\u518C\u591A\u4E2A\u751F\u547D\u5468\u671F(\u53EF\u4EE5\u8FDB\u884C\u4EE3\u7801\u89E3\u8026\uFF0C\u5C01\u88C5 hook)</code></strong></p><p>\u6CE8\u610F\uFF1A<code>Vue3 \u4E2D\u6CA1\u6709 beforeCreate\u3001create\uFF0C</code><strong><code>setup \u51FD\u6570\u4EE3\u66FF\u4E86\u5B83\u4EEC\uFF0C\u5E76\u4E14\u6BD4\u5B83\u4EEC\u8FD8\u8981\u65E9\u6267\u884C</code></strong></p><p><strong>options Api \u4E2D\uFF0CbeforeCreate\u3001create \u7684\u5B9E\u73B0\u4E0E\u5176\u5B83\u7684\u94A9\u5B50\u51FD\u6570\u5B9E\u73B0\u539F\u7406\u4E0D\u4E00\u6837</strong></p></blockquote><blockquote><h3 id="\u{1F3C0}-vue3-\u4F9D\u8D56\u6CE8\u5165-provide-inject" tabindex="-1"><a class="header-anchor" href="#\u{1F3C0}-vue3-\u4F9D\u8D56\u6CE8\u5165-provide-inject" aria-hidden="true">#</a> \u{1F3C0} VUE3 \u4F9D\u8D56\u6CE8\u5165 provide inject</h3><p><strong>\u4F7F\u7528\u65B9\u6CD5\u57FA\u672C\u540C options Api\uFF0C\u4E0D\u540C\u7684\u662F\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u5904\u7406\uFF0Coptions Api \u54CD\u5E94\u5F0F\u6570\u636E\u9700\u8981\u5BFC\u5165 computed \u65B9\u6CD5\u5BF9\u6570\u636E\u8FDB\u884C\u54CD\u5E94\u5F0F\u8F6C\u5316\uFF0Ccomposition Api \u901A\u8FC7 ref \u6216\u8005 reactive \u58F0\u660E\u5373\u53EF</strong></p><p><strong>\u6CE8\u610F\uFF1A\u5C3D\u91CF\u4E0D\u8981\u5728\u5B50\u7EC4\u4EF6 inject \u83B7\u53D6\u6570\u636E\u53BB\u4FEE\u6539\u7236\u7EC4\u4EF6\u4F20\u8FC7\u6765\u7684\u6570\u636E\uFF0C\u4F20\u9012\u5E94\u5F53\u8FDB\u884C readonly \u53EA\u8BFB\u5904\u7406\u3010\u9075\u5FAA\u5355\u5411\u6570\u636E\u6D41\u3011</strong></p></blockquote><blockquote><h3 id="\u{1F3BF}-hook" tabindex="-1"><a class="header-anchor" href="#\u{1F3BF}-hook" aria-hidden="true">#</a> \u{1F3BF} Hook</h3><p><strong>\u89C4\u8303\u4EE5 <code>use</code> \u524D\u7F00\u5F00\u59CB\u547D\u540D</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-keyword);">export</span><span style="color:var(--shiki-color-text);"> useXXX = function(){</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	const xxx = ref(&#39;xxx&#39;)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	const yyy = ()=&gt;{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">		xxx.value = &#39;yyy&#39;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u8FD4\u56DE\u529F\u80FD\u5C5E\u6027\u65B9\u6CD5...</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	</span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">		xxx</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">		yyy</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	}</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u4F7F\u7528</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> { </span><span style="color:var(--shiki-token-constant);">xxx</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-constant);">yyy</span><span style="color:var(--shiki-color-text);"> } </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">useXXX</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// \u540C\u6837\u53EF\u4EE5\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26 ...(\u7F3A\u70B9\uFF1A\u4E0D\u6E05\u695A\u6570\u636E\u6765\u6E90)</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">...</span><span style="color:var(--shiki-color-text);">useXXX</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><h3 id="\u{1F9F8}-h-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u{1F9F8}-h-\u51FD\u6570" aria-hidden="true">#</a> \u{1F9F8} h \u51FD\u6570</h3><p><strong>Vue \u63A8\u8350\u5728\u7EDD\u5927\u6570\u60C5\u51B5\u4E0B\u4F7F\u7528\u6A21\u677F\u6765\u521B\u5EFA\u4F60\u7684 HTML\uFF0C\u5BF9\u4E8E\u4E00\u4E9B\u7279\u6B8A\u7684\u573A\u666F\uFF0C\u771F\u7684\u9700\u8981 JavaScript \u7684\u5B8C\u5168\u7F16\u7A0B\u7684\u80FD\u529B\uFF0C\u8FD9\u4E2A\u65F6\u5019\u53EF\u4EE5\u4F7F\u7528\u6E32\u67D3\u51FD\u6570\uFF0C<code>\u5B83\u6BD4\u6A21\u677F\u66F4\u63A5\u8FD1\u7F16\u8BD1\u5668\u{1F389}</code></strong></p><p><strong>Vue \u5728\u751F\u6210\u771F\u5B9E\u7684 DOM \u4E4B\u524D\uFF0C\u4F1A<code>\u5C06\u8282\u70B9\u8F6C\u6362\u6210 VNode \u865A\u62DF\u8282\u70B9</code>\uFF0C\u800C <code>VNode \u865A\u62DF\u8282\u70B9\u7EC4\u5408\u5728\u4E00\u8D77\u5F62\u6210\u4E00\u9897\u6811\u7ED3\u6784</code>\uFF0C\u8FD9\u68F5\u6811\u5C31\u662F\u865A\u62DF DOM\u3010VDOM\u3011</strong></p><p><strong>\u4E8B\u5B9E\u4E0A\uFF0C<code>\u901A\u8FC7\u7F16\u5199 template HTML \u65B9\u5F0F\u6700\u7EC8\u4E5F\u662F\u901A\u8FC7\u4F7F\u7528 \u6E32\u67D3\u51FD\u6570 \u751F\u6210\u5BF9\u5E94\u7684 VNode \u865A\u62DF\u8282\u70B9</code></strong></p><p><strong><code>template \u7ECF\u8FC7 compile \u7F16\u8BD1\u8F6C\u5316 render \u8C03\u7528\u51FD\u6570\u8FD4\u56DE VNode</code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-token-comment);">// Vue2 h \u51FD\u6570\u4F5C\u4E3A render \u7684\u53C2\u6570\u53BB\u63A5\u53D7</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// Vue3 h \u51FD\u6570\u9700\u8981\u901A\u8FC7 import \u5BFC\u5165</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">render</span><span style="color:var(--shiki-color-text);">(h){</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">	</span><span style="color:var(--shiki-token-comment);">// retrun VNode</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u63A5\u53D7\u4E09\u4E2A\u53C2\u6570</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 1\u3001\u6807\u7B7E\uFF1Astring | object | function \u6807\u7B7E\u540D\u3001\u7EC4\u4EF6\u3001\u5F02\u6B65\u7EC4\u4EF6(\u5F15\u5165\u7EC4\u4EF6\u65F6\u4E0D\u9700\u8981\u6CE8\u518C\u7EC4\u4EF6\u76F4\u63A5\u4F7F\u7528)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 2\u3001props \u5C5E\u6027\u4E8B\u4EF6...\uFF0C\u6CA1\u6709\u65F6\u5019\u6CA1\u6709\u4E0D\u4F20\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570\u4F5C\u4E3A\u7B2C\u4E8C\u53C2\u6570\uFF0C\u4F46\u662F\u5EFA\u8BAE\u4F7F\u7528 null \u5360\u4F4D</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 3\u3001\u5B50\u5143\u7D20\uFF1Astring | array | object | \u63D2\u69FDslot</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">h</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;div&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);">{</span><span style="color:var(--shiki-token-comment);">/* \u5C5E\u6027 */</span><span style="color:var(--shiki-color-text);">}</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);">[</span><span style="color:var(--shiki-token-comment);">/* \u5B50\u5143\u7D20 */</span><span style="color:var(--shiki-color-text);">]</span><span style="color:var(--shiki-token-keyword);">||</span><span style="color:var(--shiki-color-text);">\u6807\u7B7E\u5185\u5BB9)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u8FD9\u91CC\u4E3A\u4EC0\u4E48\u53EF\u4EE5\u4F7F\u7528 this \u8BBF\u95EE\u54CD\u5E94\u5F0F\u5C5E\u6027\uFF1F\u56E0\u4E3A render \u51FD\u6570\u662F\u6709\u7ED9\u7ED1\u5B9A this \u7684</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">h</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;div&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-string-expression);">\`</span><span style="color:var(--shiki-token-keyword);">\${</span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-color-text);">.xxx</span><span style="color:var(--shiki-token-keyword);">}</span><span style="color:var(--shiki-token-string-expression);">\`</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// Vue3 h \u51FD\u6570\u5199\u6CD5</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">setup</span><span style="color:var(--shiki-color-text);">(){</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">xxx</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ref</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;yyy&#39;</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-function);">retrun</span><span style="color:var(--shiki-color-text);"> ()</span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">h</span><span style="color:var(--shiki-color-text);">(xxx</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);">xxx</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-string-expression);">\`</span><span style="color:var(--shiki-token-keyword);">\${</span><span style="color:var(--shiki-token-constant);">xxx</span><span style="color:var(--shiki-color-text);">.value</span><span style="color:var(--shiki-token-keyword);">}</span><span style="color:var(--shiki-token-string-expression);">\`</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">h</span><span style="color:var(--shiki-color-text);">(\u7EC4\u4EF6</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);">xxx</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            default</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-token-function);">\u51FD\u6570</span><span style="color:var(--shiki-color-text);">(props)</span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-token-function);">h</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-comment);">// \u7236\u7EC4\u4EF6\u5B9A\u4E49</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">this</span><span style="color:var(--shiki-token-function);">.</span><span style="color:var(--shiki-token-constant);">$slot</span><span style="color:var(--shiki-token-function);">.default</span><span style="color:var(--shiki-color-text);">()</span><span style="color:var(--shiki-token-keyword);">??</span><span style="color:var(--shiki-token-string-expression);">&#39;&#39;</span><span style="color:var(--shiki-token-comment);">// \u5B50\u7EC4\u4EF6\u4F7F\u7528</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        })</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">// jsx \u5199\u6CD5\uFF0C\u811A\u624B\u67B6\u4E0D\u652F\u6301\u9700\u8981\u4F7F\u7528 Babel \u8F6C\u5316</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">jsx </span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-color-text);"> \u8F6C\u5316 </span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-color-text);"> h \u51FD\u6570 </span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-color-text);"> VNode </span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-color-text);"> VDom</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="diff-\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#diff-\u7B97\u6CD5" aria-hidden="true">#</a> diff \u7B97\u6CD5</h3><blockquote><h4 id="\u{1F3A8}-key-\u7684\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u{1F3A8}-key-\u7684\u4F5C\u7528" aria-hidden="true">#</a> \u{1F3A8} key \u7684\u4F5C\u7528</h4><p><strong>key \u5C5E\u6027\u4E3B\u8981\u7528\u4E8E Vue \u7684\u865A\u62DF DOM \u7B97\u6CD5\uFF0C<code>\u5728\u65B0\u65E7\u8282\u70B9 nodes \u5BF9\u6BD4\u65F6\uFF0C\u8FA8\u8BC6 VNode</code></strong></p><p><strong>\u4E0D\u4F7F\u7528 Key\uFF1A\u5982\u679C\u4E0D\u4F7F\u7528 key\uFF0C<code>Vue \u4F1A\u4F7F\u7528\u4E00\u79CD\u6700\u5927\u9650\u5EA6\u51CF\u5C11\u52A8\u6001\u5143\u7D20\u5E76\u4E14\u5C3D\u53EF\u80FD\u5C1D\u8BD5\u5730\u4FEE\u6539 or \u4FEE\u590D\u76F8\u540C\u7C7B\u578B\u7684\u5143\u7D20\u7684\u7B97\u6CD5</code></strong></p><p><strong>\u4F7F\u7528 Key\uFF1AVue \u4F1A\u57FA\u4E8E Key \u7684\u53D8\u5316<code>(\u6839\u636E Key)\uFF0C\u91CD\u65B0\u6392\u5E8F\u5143\u7D20\u7684\u987A\u5E8F\uFF0C\u5E76\u4E14\u79FB\u9664\u9500\u6BC1\u4E0D\u5B58\u5728\u7684 Key \u5143\u7D20</code></strong></p><h5 id="\u{1F30F}-vnode-\u865A\u62DF\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u{1F30F}-vnode-\u865A\u62DF\u8282\u70B9" aria-hidden="true">#</a> \u{1F30F} VNode \u865A\u62DF\u8282\u70B9</h5><p>\u6D45\u5C42\u6B21\u7406\u89E3\uFF1A<strong>\u771F\u5B9E\u8282\u70B9 HTML\u3010<code>h1\u3001div\u3001span</code>\u3011\uFF0C\u865A\u62DF\u8282\u70B9 VNode <code>Javascript \u5BF9\u8C61</code>\u3010\u5B58\u5728\u5185\u5B58\u5F53\u4E2D\u3011</strong></p><p><strong>\u4E8B\u5B9E\u4E0A\uFF0C<code>\u65E0\u8BBA\u662F\u7EC4\u4EF6\u8FD8\u662F\u5143\u7D20\uFF0C\u5728 Vue \u4E2D\u8868\u73B0\u51FA\u6765\u7684\u90FD\u662F\u4E00\u4E2A\u4E2A VNode</code>\uFF0CVue \u4F1A\u5C06\u6A21\u677F\u4E2D\u7684\u4E00\u4E2A\u4E2A\u7EC4\u4EF6\u6216\u8005\u5143\u7D20\u8F6C\u6362\u6210 VNode \u5BF9\u8C61\u3010\u53C2\u8003 h \u51FD\u6570\u3011</strong></p><p><strong>VNode\uFF1A\u672C\u8D28 Javascript \u5BF9\u8C61\uFF0C\u7528\u4E8E\u63CF\u8FF0\u7EC4\u4EF6\u6216\u8005\u6807\u7B7E\uFF0C\u4E3A\u4EC0\u4E48\u8981\u591A\u6B64\u4E00\u4E3E\u901A\u8FC7 VNode \u518D\u8F6C\u6362 VDom \u518D\u771F\u5B9E Dom\uFF1F\u53EF\u4EE5\u591A\u5E73\u53F0\u9002\u914D\u3010\u670D\u52A1\u7AEF\u6E32\u67D3\u3001\u79FB\u52A8\u7AEF\u6E32\u67D3\u3001\u8DE8\u5E73\u53F0\u6E32\u67D3\u3011</strong></p><h5 id="\u{1F6F5}-vdom-\u865A\u62DF-dom" tabindex="-1"><a class="header-anchor" href="#\u{1F6F5}-vdom-\u865A\u62DF-dom" aria-hidden="true">#</a> \u{1F6F5} VDom \u865A\u62DF DOM</h5><p><strong><code>\u901A\u8FC7\u4E00\u4E2A\u4E2A VNode \u5BF9\u8C61\u5173\u7CFB\u6574\u5408\uFF0C\u5F62\u6210\u7684\u4E00\u9897\u5BF9\u8C61\u6811\uFF0C\u79F0\u4E4B\u4E3A \u865A\u62DF DOM</code></strong></p><p><strong>\u901A\u8FC7\u865A\u62DF DOM \u6E32\u67D3\u6210\u4E3A\u771F\u5B9E\u7684 DOM\uFF0C\u5728\u6D4F\u89C8\u5668\u5C55\u793A\uFF0C\u9700\u8981\u77E5\u9053\u7684\u662F\uFF0CVDOM \u4E0E\u771F\u5B9E\u7684 DOM \u5E76\u4E0D\u662F\u4E00\u4E00\u5BF9\u5E94\u7684\uFF0C\u865A\u62DF DOM \u5B58\u5728\u4E00\u4E9B Vue \u7EC4\u4EF6( VNode )</strong></p><h5 id="\u4E3E\u4E2A-\u{1F330}" tabindex="-1"><a class="header-anchor" href="#\u4E3E\u4E2A-\u{1F330}" aria-hidden="true">#</a> \u4E3E\u4E2A \u{1F330}</h5><p><strong>\u5F53\u5728\u4E00\u4E2A\u6570\u7EC4\u4E2D\u4EFB\u610F\u4F4D\u7F6E\u6DFB\u52A0\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u4F55\u624D\u80FD\u9AD8\u6548\u66F4\u65B0 DOM?</strong></p><p>1\u3001\u5168\u90E8\u5E72\u6389\uFF0C\u91CD\u65B0\u66F4\u65B0\u6570\u7EC4\u91CC\u9762\u6240\u6709\u5143\u7D20\u3010\u6700\u4E0D\u9AD8\u6548\u3011</p><p>2\u3001\u56E0\u4E3A\u5728\u63D2\u5165\u7684\u5143\u7D20\u4E2D\uFF0C\u6570\u7EC4\u524D\u9762\u7684\u5143\u7D20\u4F4D\u7F6E\u4E0D\u53D8\uFF0C\u540E\u9762\u5143\u7D20\u7684\u4F4D\u7F6E\u624D\u4F1A\u6539\u53D8\uFF0C\u524D\u9762\u5143\u7D20\u4E0D\u53D8\uFF0C\u66F4\u65B0\u540E\u9762\u7684\u5143\u7D20\u3010\u8FD8\u4E0D\u9519\u3011\u3010<code>\u65E0 Key\u505A\u6CD5</code>\u3011</p><p><strong>3\u3001\u76F4\u63A5\u5728\u6570\u7EC4\u4E2D\u63D2\u5165\u9700\u8981\u63D2\u5165\u7684\u5143\u7D20\u3010\u6700\u9AD8\u6548\u3011\uFF0C\u600E\u4E48\u63D2\uFF1F \u{1F343} \u901A\u8FC7 \u65B0\u65E7 VDom(VNodes) \u5BF9\u6BD4\u6839\u636E\u9700\u8981\u53D8\u5316\u5730\u65B9\u8FDB\u884C\u66F4\u65B0\uFF0C\u3010\u600E\u4E48\u5BF9\u6BD4\uFF1F\u8FD9\u5C31\u662F diff \u7B97\u6CD5\u505A\u7684\u4E8B\u60C5\uFF0CKey \u7684\u4F5C\u7528\u3011\u3010<code>\u6709 Key</code>\u3011</strong></p><p>\u5728\u6E90\u7801\u4E2D\uFF0C\u5982\u679C\u5B58\u5728 Key\uFF0C\u5219\u8C03\u7528\u7684\u662F pathKeyedChildren\uFF0C\u4E0D\u5B58\u5728 Key\uFF0C\u8C03\u7528 pathUnKeyedChildren</p><p><code>D:\\Material\\Vue\u6E90\u7801\u89E3\u6790\\core\\packages\\runtime-core\\src\\renderer.ts\uFF1A1593</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">patchChildren</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">PatchChildrenFn</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    n1</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    n2</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    optimized </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  ) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">c1</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> n1 </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">n1</span><span style="color:var(--shiki-color-text);">.children</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">prevShapeFlag</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> n1 </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">n1</span><span style="color:var(--shiki-color-text);">.shapeFlag </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">c2</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">n2</span><span style="color:var(--shiki-color-text);">.children</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> { </span><span style="color:var(--shiki-token-constant);">patchFlag</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">shapeFlag</span><span style="color:var(--shiki-color-text);"> } </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> n2</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// fast path</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (patchFlag </span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// \u5224\u65AD key \u662F\u5426\u5B58\u5728</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (patchFlag </span><span style="color:var(--shiki-token-keyword);">&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">PatchFlags</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">KEYED_FRAGMENT</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// this could be either fully-keyed or mixed (some keyed some not)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">//patchFlag \u7684\u5B58\u5728\u610F\u5473\u7740\u5B50\u5143\u7D20\u88AB\u4FDD\u8BC1\u662F\u6570\u7EC4</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">patchKeyedChildren</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          c1 </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">[]</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-comment);">// \u65E7\u7684 VNodes</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          c2 </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNodeArrayChildren</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-comment);">// \u65B0\u7684 VNodes</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (patchFlag </span><span style="color:var(--shiki-token-keyword);">&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">PatchFlags</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">UNKEYED_FRAGMENT</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// unkeyed \u65E0\u952E</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">patchUnkeyedChildren</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          c1 </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">[]</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          c2 </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNodeArrayChildren</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">//children \u6709 3 \u79CD\u53EF\u80FD\u6027\uFF1A\u6587\u672C\u3001\u6570\u7EC4\u6216\u65E0\u5B50\u9879</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (shapeFlag </span><span style="color:var(--shiki-token-keyword);">&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ShapeFlags</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">TEXT_CHILDREN</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// text children fast path</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (prevShapeFlag </span><span style="color:var(--shiki-token-keyword);">&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ShapeFlags</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">ARRAY_CHILDREN</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">unmountChildren</span><span style="color:var(--shiki-color-text);">(c1 </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">[]</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> parentSuspense)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (c2 </span><span style="color:var(--shiki-token-keyword);">!==</span><span style="color:var(--shiki-color-text);"> c1) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">hostSetElementText</span><span style="color:var(--shiki-color-text);">(container</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> c2 </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">string</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (prevShapeFlag </span><span style="color:var(--shiki-token-keyword);">&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ShapeFlags</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">ARRAY_CHILDREN</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// prev children was array</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (shapeFlag </span><span style="color:var(--shiki-token-keyword);">&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ShapeFlags</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">ARRAY_CHILDREN</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-comment);">// two arrays, cannot assume anything, do full diff</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">patchKeyedChildren</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            c1 </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">[]</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            c2 </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNodeArrayChildren</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-comment);">// no new children, just unmount old</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">unmountChildren</span><span style="color:var(--shiki-color-text);">(c1 </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">[]</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// prev children was text OR null</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// new children is array OR null</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (prevShapeFlag </span><span style="color:var(--shiki-token-keyword);">&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ShapeFlags</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">TEXT_CHILDREN</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">hostSetElementText</span><span style="color:var(--shiki-color-text);">(container</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;&#39;</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// mount new if array</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (shapeFlag </span><span style="color:var(--shiki-token-keyword);">&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">ShapeFlags</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">ARRAY_CHILDREN</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">mountChildren</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            c2 </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNodeArrayChildren</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="patchkeyedchildren" tabindex="-1"><a class="header-anchor" href="#patchkeyedchildren" aria-hidden="true">#</a> patchKeyedChildren</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// can be all-keyed or mixed</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">patchKeyedChildren</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    c1</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">[]</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    c2</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNodeArrayChildren</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    container</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">RendererElement</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    parentAnchor</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">RendererNode</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    parentComponent</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ComponentInternalInstance</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    parentSuspense</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">SuspenseBoundary</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    isSVG</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">boolean</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    slotScopeIds</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">string</span><span style="color:var(--shiki-color-text);">[] </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    optimized</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">boolean</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  ) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">l2</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">c2</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">length</span><span style="color:var(--shiki-token-comment);">// \u83B7\u53D6\u65E7 VNodes \u957F\u5EA6</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> e1 </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">c1</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">length</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// \u65B0 VNode \u7ED3\u675F\u7684\u7D22\u5F15</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> e2 </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> l2 </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// \u65E7 VNode \u7ED3\u675F\u7684\u7D22\u5F15</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u591A\u79CD\u64CD\u4F5C\u6570\u7EC4\u7684\u65B9\u6CD5\u5224\u65AD</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 1. \u4ECE\u5934\u90E8\u5F00\u59CB\u904D\u5386\u6BD4\u8F83</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// (a b) c</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// (a b) d e</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">while</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> e1 </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> e2) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">n1</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> c1[i] </span><span style="color:var(--shiki-token-comment);">// \u65B0 vnode</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">n2</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (c2[i] </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">cloneIfMounted</span><span style="color:var(--shiki-color-text);">(c2[i] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">normalizeVNode</span><span style="color:var(--shiki-color-text);">(c2[i])) </span><span style="color:var(--shiki-token-comment);">// \u65E7 vnode</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// \u662F\u76F8\u540C\u7684 vnode\uFF0C\u901A\u8FC7 key and \u7C7B\u578B \u5224\u65AD</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isSameVNodeType</span><span style="color:var(--shiki-color-text);">(n1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> n2)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// \u6BD4\u8F83</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">patch</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          n1</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          n2</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// \u4E0D\u76F8\u540C</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// \u627E\u5230\u5BF9\u6BD4\u4E0D\u76F8\u540C\u7684 vnode \u8DF3\u51FA\u5FAA\u73AF\uFF0C\u5230\u4E0B\u4E00\u6B65 2</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">break</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// \u5934\u90E8\u53D6 ++ \u64CD\u4F5C</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      i</span><span style="color:var(--shiki-token-keyword);">++</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 2. \u4ECE\u5C3E\u90E8\u904D\u5386\u6BD4\u8F83 e1 e2(\u5C3E\u90E8\u957F\u5EA6)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// a (b c)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// d e (b c)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">while</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> e1 </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> e2) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// \u64CD\u4F5C\u540C\u4E0A 1</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">n1</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> c1[e1]</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">n2</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (c2[e2] </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">cloneIfMounted</span><span style="color:var(--shiki-color-text);">(c2[e2] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">normalizeVNode</span><span style="color:var(--shiki-color-text);">(c2[e2]))</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">isSameVNodeType</span><span style="color:var(--shiki-color-text);">(n1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> n2)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">patch</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          n1</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          n2</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-comment);">// \u627E\u5230\u5BF9\u6BD4\u4E0D\u76F8\u540C\u7684 vnode \u8DF3\u51FA\u5FAA\u73AF\uFF0C\u5230\u4E0B\u4E00\u6B65 3</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">break</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// \u5C3E\u90E8\u53D6 -- \u64CD\u4F5C</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      e1</span><span style="color:var(--shiki-token-keyword);">--</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      e2</span><span style="color:var(--shiki-token-keyword);">--</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 3. \u5F53\u6BD4\u8F83\u53D1\u73B0 c2 \u65B0 vnode \u65B0\u589E\u7684\uFF0C\u6302\u8F7D\u65B0 vnode</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// (a b)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// (a b) c</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// i = 2, e1 = 1, e2 = 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// (a b)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// c (a b)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// i = 0, e1 = -1, e2 = 0</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-color-text);"> e1) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> e2) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">nextPos</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> e2 </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-token-comment);">// \u83B7\u53D6\u65B0 vnode \u4F4D\u7F6E</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">anchor</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> nextPos </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> l2 </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> (c2[nextPos] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">).el </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> parentAnchor</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">while</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> e2) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">patch</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-comment);">// \u5229\u7528\u7A7A\u7684 \u4E0E c2 \u65B0\u7684\u6BD4\u8F83\uFF0C\u5F53\u8FD9\u91CC\u4E3A\u7A7A\u8868\u793A\u4E3A\u4E00\u4E2A\u6302\u64CD\u4F5C</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            (c2[i] </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">cloneIfMounted</span><span style="color:var(--shiki-color-text);">(c2[i] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">normalizeVNode</span><span style="color:var(--shiki-color-text);">(c2[i]))</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          i</span><span style="color:var(--shiki-token-keyword);">++</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 4. \u5F53\u6BD4\u8F83\u53D1\u73B0 c1 \u65E7 vnode\uFF0C\u5269\u4F59\u591A\u4F59\u7684\uFF0C\u5378\u8F7D\u591A\u4F59\u7684 vnode</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// (a b) c</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// (a b)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// i = 2, e1 = 2, e2 = 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// a (b c)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// (b c)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// i = 0, e1 = 0, e2 = -1</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-color-text);"> e2) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">while</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> e1) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">unmount</span><span style="color:var(--shiki-color-text);">(c1[i]</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        i</span><span style="color:var(--shiki-token-keyword);">++</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// 5. \u5F53\u6BD4\u8F83\u5B8C\u524D\u540E\uFF0C\u53D1\u73B0\u4E2D\u95F4\u4EA7\u751F\u6BD4\u8F83\u591A\u7684\u4EA4\u53C9\u9519\u4E71\u7684 vnode(\u65E0\u5E8F\u7684\uFF0C\u4E71\u4E03\u516B\u7CDF\u7684)\uFF0CVue \u5E76\u4E0D\u662F\u5168\u90E8\u5220\u9664\u91CD\u65B0\u6302\u8F7D</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u5982\u679C\u5BF9\u6BD4\u53D1\u73B0\u662F\u591A\u4F59\u7684(c1\u91CC\u9762)\uFF0C\u9664\u53BB</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u5982\u679C\u5BF9\u6BD4\u53D1\u73B0\u662F\u5B58\u5728\u7684\uFF0C\u7C7B\u578B\u76F8\u540C\u7684\uFF0C\u6216\u8005\u65B0\u7684\uFF0C\u90A3\u4E48\u3010\u79FB\u52A8\u548C\u6302\u8F7D\u65B0\u7684 vnode\u3011</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// [i ... e1 + 1]: a b [c d e] f g</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// [i ... e2 + 1]: a b [e d c h] f g</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// i = 2, e1 = 4, e2 = 5</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">s1</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-comment);">// prev starting index</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">s2</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-comment);">// next starting index</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// 5.1 build key:index map for newChildren</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">keyToNewIndexMap</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">Map</span><span style="color:var(--shiki-color-text);">&lt;</span><span style="color:var(--shiki-token-constant);">string</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">number</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">symbol</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">number</span><span style="color:var(--shiki-color-text);">&gt; </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Map</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> s2; i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> e2; i</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">nextChild</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (c2[i] </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">cloneIfMounted</span><span style="color:var(--shiki-color-text);">(c2[i] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">normalizeVNode</span><span style="color:var(--shiki-color-text);">(c2[i]))</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">nextChild</span><span style="color:var(--shiki-color-text);">.key </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (__DEV__ </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">keyToNewIndexMap</span><span style="color:var(--shiki-token-function);">.has</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">nextChild</span><span style="color:var(--shiki-color-text);">.key)) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">warn</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-string-expression);">\`Duplicate keys found during update:\`</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-constant);">JSON</span><span style="color:var(--shiki-token-function);">.stringify</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">nextChild</span><span style="color:var(--shiki-color-text);">.key)</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-string-expression);">\`Make sure keys are unique.\`</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-constant);">keyToNewIndexMap</span><span style="color:var(--shiki-token-function);">.set</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">nextChild</span><span style="color:var(--shiki-color-text);">.key</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> i)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// 5.2 loop through old children left to be patched and try to patch</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// matching nodes &amp; remove nodes that are no longer present</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> j</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> patched </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">toBePatched</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> e2 </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> s2 </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> moved </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">false</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// used to track whether any node has moved</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> maxNewIndexSoFar </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// works as Map&lt;newIndex, oldIndex&gt;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// Note that oldIndex is offset by +1</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// and oldIndex = 0 is a special value indicating the new node has</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// no corresponding old node.</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// used for determining longest stable subsequence</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">newIndexToOldIndexMap</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">new</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Array</span><span style="color:var(--shiki-color-text);">(toBePatched)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">; i </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> toBePatched; i</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) newIndexToOldIndexMap[i] </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> s1; i </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> e1; i</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">prevChild</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> c1[i]</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (patched </span><span style="color:var(--shiki-token-keyword);">&gt;=</span><span style="color:var(--shiki-color-text);"> toBePatched) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-comment);">// all new children have been patched so this can only be a removal</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">unmount</span><span style="color:var(--shiki-color-text);">(prevChild</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">continue</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> newIndex</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">prevChild</span><span style="color:var(--shiki-color-text);">.key </span><span style="color:var(--shiki-token-keyword);">!=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          newIndex </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">keyToNewIndexMap</span><span style="color:var(--shiki-token-function);">.get</span><span style="color:var(--shiki-color-text);">(</span><span style="color:var(--shiki-token-constant);">prevChild</span><span style="color:var(--shiki-color-text);">.key)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-comment);">// key-less node, try to locate a key-less node of the same type</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (j </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> s2; j </span><span style="color:var(--shiki-token-keyword);">&lt;=</span><span style="color:var(--shiki-color-text);"> e2; j</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              newIndexToOldIndexMap[j </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> s2] </span><span style="color:var(--shiki-token-keyword);">===</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">&amp;&amp;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-function);">isSameVNodeType</span><span style="color:var(--shiki-color-text);">(prevChild</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> c2[j] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            ) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              newIndex </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> j</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">              </span><span style="color:var(--shiki-token-keyword);">break</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (newIndex </span><span style="color:var(--shiki-token-keyword);">===</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">undefined</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">unmount</span><span style="color:var(--shiki-color-text);">(prevChild</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          newIndexToOldIndexMap[newIndex </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> s2] </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (newIndex </span><span style="color:var(--shiki-token-keyword);">&gt;=</span><span style="color:var(--shiki-color-text);"> maxNewIndexSoFar) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            maxNewIndexSoFar </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> newIndex</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            moved </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">true</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">patch</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            prevChild</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            c2[newIndex] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          patched</span><span style="color:var(--shiki-token-keyword);">++</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// 5.3 move and mount</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// generate longest stable subsequence only when nodes have moved</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">increasingNewIndexSequence</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> moved</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">getSequence</span><span style="color:var(--shiki-color-text);">(newIndexToOldIndexMap)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">EMPTY_ARR</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      j </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">increasingNewIndexSequence</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">length</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// looping backwards so that we can use last patched node as anchor</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> toBePatched </span><span style="color:var(--shiki-token-keyword);">-</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">; i </span><span style="color:var(--shiki-token-keyword);">&gt;=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">; i</span><span style="color:var(--shiki-token-keyword);">--</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">nextIndex</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> s2 </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> i</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">nextChild</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> c2[nextIndex] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">anchor</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          nextIndex </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> l2 </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> (c2[nextIndex </span><span style="color:var(--shiki-token-keyword);">+</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">1</span><span style="color:var(--shiki-color-text);">] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">).el </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> parentAnchor</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (newIndexToOldIndexMap[i] </span><span style="color:var(--shiki-token-keyword);">===</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-comment);">// mount new</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-function);">patch</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            nextChild</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (moved) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-comment);">// move if:</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-comment);">// There is no stable subsequence (e.g. a reverse)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-comment);">// OR current node is not among the stable sequence</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (j </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">||</span><span style="color:var(--shiki-color-text);"> i </span><span style="color:var(--shiki-token-keyword);">!==</span><span style="color:var(--shiki-color-text);"> increasingNewIndexSequence[j]) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            </span><span style="color:var(--shiki-token-function);">move</span><span style="color:var(--shiki-color-text);">(nextChild</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> container</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> anchor</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">MoveType</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">REORDER</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">            j</span><span style="color:var(--shiki-token-keyword);">--</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">          }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="patchunkeyedchildren" tabindex="-1"><a class="header-anchor" href="#patchunkeyedchildren" aria-hidden="true">#</a> patchUnkeyedChildren</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:var(--shiki-color-background);"><code><span class="line"><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">patchUnkeyedChildren</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    c1</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">[]</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    c2</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNodeArrayChildren</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    container</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">RendererElement</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    anchor</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">RendererNode</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    parentComponent</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">ComponentInternalInstance</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    parentSuspense</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">SuspenseBoundary</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    isSVG</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">boolean</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    slotScopeIds</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">string</span><span style="color:var(--shiki-color-text);">[] </span><span style="color:var(--shiki-token-keyword);">|</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    optimized</span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">boolean</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  ) </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    c1 </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> c1 </span><span style="color:var(--shiki-token-keyword);">||</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">EMPTY_ARR</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    c2 </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> c2 </span><span style="color:var(--shiki-token-keyword);">||</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">EMPTY_ARR</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">oldLength</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">c1</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">length</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// \u65B0 vnodes \u7684\u957F\u5EA6</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">newLength</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">c2</span><span style="color:var(--shiki-color-text);">.</span><span style="color:var(--shiki-token-constant);">length</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-comment);">// \u65E7 vnodes \u7684\u957F\u5EA6</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u83B7\u53D6\u6700\u5C0F\u7684\u90A3\u4E2A vnodes \u7684\u957F\u5EA6\uFF0C\u7528\u6700\u5C0F\u957F\u5EA6\u7684 vnodes \u904D\u5386(\u7528\u6700\u5927\u7684\u53EF\u80FD\u4EA7\u751F\u8D8A\u754C\uFF0C\u7528\u957F\u5EA6\u6700\u5C0F\u7684 vnodes \u5BF9\u6BD4)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">commonLength</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Math</span><span style="color:var(--shiki-token-function);">.min</span><span style="color:var(--shiki-color-text);">(oldLength</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> newLength)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">let</span><span style="color:var(--shiki-color-text);"> i</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u4F9D\u6B21 patch \u6BD4\u8F83</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">for</span><span style="color:var(--shiki-color-text);"> (i </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">0</span><span style="color:var(--shiki-color-text);">; i </span><span style="color:var(--shiki-token-keyword);">&lt;</span><span style="color:var(--shiki-color-text);"> commonLength; i</span><span style="color:var(--shiki-token-keyword);">++</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-keyword);">const</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">nextChild</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> (c2[i] </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">?</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">cloneIfMounted</span><span style="color:var(--shiki-color-text);">(c2[i] </span><span style="color:var(--shiki-token-keyword);">as</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">VNode</span><span style="color:var(--shiki-color-text);">)</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">normalizeVNode</span><span style="color:var(--shiki-color-text);">(c2[i]))</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// ...</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-function);">patch</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        c1[i]</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        nextChild</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        optimized</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// \u65E7\u7684\u957F\u5EA6\u5927\u4E8E\u65B0\u7684\uFF0C\u8FDB\u884C\u5207\u5C3E\uFF0C\u5220\u9664\u591A\u51FA\u6765\u7684\u957F\u5EA6\u7684\u5143\u7D20</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (oldLength </span><span style="color:var(--shiki-token-keyword);">&gt;</span><span style="color:var(--shiki-color-text);"> newLength) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// remove old</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-function);">unmountChildren</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        c1</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-comment);">// ...</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">true</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-constant);">false</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        commonLength</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    } </span><span style="color:var(--shiki-token-keyword);">else</span><span style="color:var(--shiki-color-text);"> {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// \u65E7\u7684\u957F\u5EA6\u5C0F\u4E8E\u65B0\u7684\uFF0C\u521B\u5EFA\u65B0\u7684\u591A\u51FA\u6765\u7684\u8282\u70B9</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-comment);">// mount new</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      </span><span style="color:var(--shiki-token-function);">mountChildren</span><span style="color:var(--shiki-color-text);">(</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        c2</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-comment);">// ...</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        container</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        anchor</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        parentComponent</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        parentSuspense</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        isSVG</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        slotScopeIds</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        optimized</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        commonLength</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">      )</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">  }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>`,16);function C(S,I){const l=i("ExternalLinkIcon");return t(),r("div",null,[v,s("blockquote",null,[s("p",null,[y,h,d,n(" \u6240\u4EE5\u5728 template \u4E2D\u901A\u8FC7 "+o()+" \u8BBF\u95EE data \u4E2D\u7684\u6570\u636E\uFF0C\u53EF\u4ECE\u5BF9\u8C61\u4E2D\u83B7\u53D6\u5230\u6570\u636E \u6240\u4EE5\u4FEE\u6539 data \u7684\u503C\u65F6\uFF0Ctemplate \u4E2D\u7684 "+o()+" \u7684\u503C\u4E5F\u4F1A\u53D1\u751F\u6539\u53D8",1)])]),u,s("blockquote",null,[x,s("p",null,[s("strong",null,[m,s("a",b,[w,p(l)])])]),f,g,V]),_])}var N=e(k,[["render",C],["__file","vue-details \u6E90\u7801.html.vue"]]);export{N as default};
